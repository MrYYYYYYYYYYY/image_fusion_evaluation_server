 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
/test/server.py:21: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(f)
2022-01-11 15:57:34,452 - /test/server.py[line:59] - INFO: start evaluation submitId 2112301348091051
2022-01-11 15:57:39,873 - /test/server.py[line:59] - INFO: start evaluation submitId 2201061610253671
2022-01-11 15:57:42,063 - /test/server.py[line:59] - INFO: start evaluation submitId 2201061614064031
2022-01-11 15:57:44,089 - /test/server.py[line:59] - INFO: start evaluation submitId 2111221705508171
2022-01-11 15:57:46,778 - /test/server.py[line:59] - INFO: start evaluation submitId 2111221938305871
2022-01-11 15:57:49,151 - /test/server.py[line:59] - INFO: start evaluation submitId 2111291342556761
2022-01-11 15:57:50,968 - /test/server.py[line:59] - INFO: start evaluation submitId 2111291343097491
2022-01-11 15:57:53,149 - /test/server.py[line:59] - INFO: start evaluation submitId 2111241619424431
2022-01-11 16:02:07,129 - /test/server.py[line:59] - INFO: start evaluation submitId 2111291343240521
2022-01-11 16:02:53,046 - /test/server.py[line:59] - INFO: start evaluation submitId 2111211757210741
./server.py:21: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(f)
 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
/test/server.py:21: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(f)
2022-01-11 16:54:56,470 - /test/server.py[line:59] - INFO: start evaluation submitId 2111291343240521
2022-01-11 16:54:59,511 - /test/server.py[line:59] - INFO: start evaluation submitId 2112301348091051
2022-01-11 16:55:05,475 - /test/server.py[line:59] - INFO: start evaluation submitId 2201061610253671
2022-01-11 16:55:07,457 - /test/server.py[line:59] - INFO: start evaluation submitId 2201061614064031
2022-01-11 16:55:09,449 - /test/server.py[line:59] - INFO: start evaluation submitId 2111221705508171
/test/evalutaor.py:79: FutureWarning: The behavior of rgb2gray will change in scikit-image 0.19. Currently, rgb2gray allows 2D grayscale image to be passed as inputs and leaves them unmodified as outputs. Starting from version 0.19, 2D arrays will be treated as 1D images with 3 channels.
  img1 = rgb2gray(img1)
2022-01-11 17:03:20,767 - /test/server.py[line:85] - INFO: start call back submitId 2111291343240521
2022-01-11 17:03:20,939 - /test/server.py[line:94] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215'}}, 'submitId': '2111291343240521'}
2022-01-11 17:03:20,939 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-11 17:03:20,939 - /test/server.py[line:59] - INFO: start evaluation submitId 2111221938305871
2022-01-11 17:03:38,971 - /test/server.py[line:85] - INFO: start call back submitId 2112301348091051
2022-01-11 17:03:39,012 - /test/server.py[line:94] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215'}}, 'submitId': '2112301348091051'}
2022-01-11 17:03:39,012 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-11 17:03:39,012 - /test/server.py[line:59] - INFO: start evaluation submitId 2111241619424431
2022-01-11 17:03:54,664 - /test/server.py[line:85] - INFO: start call back submitId 2111221705508171
2022-01-11 17:03:54,767 - /test/server.py[line:94] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215'}}, 'submitId': '2111221705508171'}
2022-01-11 17:03:54,767 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-11 17:03:54,767 - /test/server.py[line:59] - INFO: start evaluation submitId 2111291342556761
2022-01-11 17:06:43,715 - /test/server.py[line:85] - INFO: start call back submitId 2201061610253671
2022-01-11 17:06:43,903 - /test/server.py[line:94] - INFO: {'evaluateMap': {'vifb-001': {'qg': '0.36763'}, 'vifb-002': {'qg': '0.40272'}, 'vifb-003': {'qg': '0.40851'}, 'vifb-004': {'qg': '0.42873'}, 'vifb-005': {'qg': '0.39819'}, 'vifb-006': {'qg': '0.39630'}, 'vifb-007': {'qg': '0.29974'}, 'vifb-008': {'qg': '0.40743'}, 'vifb-009': {'qg': '0.34880'}, 'vifb-010': {'qg': '0.35214'}, 'vifb-011': {'qg': '0.01666'}, 'vifb-012': {'qg': '0.43597'}, 'vifb-013': {'qg': '0.40742'}, 'vifb-014': {'qg': '0.35449'}, 'vifb-015': {'qg': '0.37353'}, 'vifb-016': {'qg': '0.00765'}, 'vifb-017': {'qg': '0.37489'}, 'vifb-018': {'qg': '0.39723'}, 'vifb-019': {'qg': '0.35449'}, 'vifb-020': {'qg': '0.00694'}, 'vifb-021': {'qg': '0.03167'}}, 'submitId': '2201061610253671'}
2022-01-11 17:06:43,903 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-11 17:06:43,904 - /test/server.py[line:59] - INFO: start evaluation submitId 2111291343097491
2022-01-11 17:06:53,290 - /test/server.py[line:85] - INFO: start call back submitId 2201061614064031
2022-01-11 17:06:53,397 - /test/server.py[line:94] - INFO: {'evaluateMap': {'vifb-001': {'qg': '0.64336'}, 'vifb-002': {'qg': '0.42039'}, 'vifb-003': {'qg': '0.61205'}, 'vifb-004': {'qg': '0.78128'}, 'vifb-005': {'qg': '0.42943'}, 'vifb-006': {'qg': '0.74663'}, 'vifb-007': {'qg': '0.42889'}, 'vifb-008': {'qg': '0.73398'}, 'vifb-009': {'qg': '0.47611'}, 'vifb-010': {'qg': '0.42009'}, 'vifb-011': {'qg': '0.02875'}, 'vifb-012': {'qg': '0.72118'}, 'vifb-013': {'qg': '0.75848'}, 'vifb-014': {'qg': '0.52407'}, 'vifb-015': {'qg': '0.45925'}, 'vifb-016': {'qg': '0.01083'}, 'vifb-017': {'qg': '0.62828'}, 'vifb-018': {'qg': '0.64169'}, 'vifb-019': {'qg': '0.47308'}, 'vifb-020': {'qg': '0.00860'}, 'vifb-021': {'qg': '0.01011'}}, 'submitId': '2201061614064031'}
2022-01-11 17:06:53,397 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-11 17:06:53,397 - /test/server.py[line:59] - INFO: start evaluation submitId 2111291343097491
2022-01-11 17:11:21,590 - /test/server.py[line:85] - INFO: start call back submitId 2111221938305871
2022-01-11 17:11:21,752 - /test/server.py[line:94] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215'}}, 'submitId': '2111221938305871'}
2022-01-11 17:11:21,752 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-11 17:11:21,752 - /test/server.py[line:59] - INFO: start evaluation submitId 2111291342556761
2022-01-11 17:11:32,762 - /test/server.py[line:85] - INFO: start call back submitId 2111241619424431
2022-01-11 17:11:32,834 - /test/server.py[line:94] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215'}}, 'submitId': '2111241619424431'}
2022-01-11 17:11:32,834 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-11 17:11:46,526 - /test/server.py[line:85] - INFO: start call back submitId 2111291342556761
2022-01-11 17:11:46,654 - /test/server.py[line:94] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215'}}, 'submitId': '2111291342556761'}
2022-01-11 17:11:46,654 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-11 17:13:27,417 - /test/server.py[line:85] - INFO: start call back submitId 2111291343097491
2022-01-11 17:13:27,530 - /test/server.py[line:94] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215'}}, 'submitId': '2111291343097491'}
2022-01-11 17:13:27,530 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-11 17:13:31,450 - /test/server.py[line:85] - INFO: start call back submitId 2111291343097491
2022-01-11 17:13:31,494 - /test/server.py[line:94] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215'}}, 'submitId': '2111291343097491'}
2022-01-11 17:13:31,494 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-11 17:14:32,264 - /test/server.py[line:85] - INFO: start call back submitId 2111291342556761
2022-01-11 17:14:32,361 - /test/server.py[line:94] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215'}}, 'submitId': '2111291342556761'}
2022-01-11 17:14:32,361 - /test/server.py[line:95] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
/test/server.py:21: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(f)
Traceback (most recent call last):
  File "/test/server.py", line 30, in <module>
    eva = evalutaor.Evaluator()
  File "/test/evalutaor.py", line 50, in __init__
    super(Evaluator, self).__init__()
  File "/test/utility.py", line 11, in __init__
    self.matlab_engine = matlab.engine.start_matlab()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/__init__.py", line 115, in start_matlab
    eng = future.result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabfuture.py", line 87, in result
    handle = pythonengine.getMATLAB(self._future)
matlab.engine.EngineError: Transport stopped.
./server.py:21: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(f)
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/__init__.py", line 191, in __exit_engines
    eng().exit()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 232, in exit
    pythonengine.closeMATLAB(self.__dict__["_matlab"])
SystemError: MATLAB process cannot be terminated.
 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
./server.py:21: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(f)
2022-01-12 18:05:11,343 - ./server.py[line:60] - INFO: start evaluation submitId 2201121805112671
2022-01-12 18:05:52,069 - ./server.py[line:60] - INFO: start evaluation submitId 2201121805519561
2022-01-12 18:06:40,388 - ./server.py[line:60] - INFO: start evaluation submitId 2201121806384081
2022-01-12 18:06:44,119 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 72, in evaluation
    imgA = imread(os.path.join(data_conf['root'], 'double', img_name + suffix[0]))
  File "/test/liantiao/lib/python3.6/site-packages/skimage/io/_io.py", line 48, in imread
    img = call_plugin('imread', fname, plugin=plugin, **plugin_args)
  File "/test/liantiao/lib/python3.6/site-packages/skimage/io/manage_plugins.py", line 209, in call_plugin
    return func(*args, **kwargs)
  File "/test/liantiao/lib/python3.6/site-packages/skimage/io/_plugins/imageio_plugin.py", line 10, in imread
    return np.asarray(imageio_imread(*args, **kwargs))
  File "/test/liantiao/lib/python3.6/site-packages/imageio/core/functions.py", line 265, in imread
    reader = read(uri, format, "i", **kwargs)
  File "/test/liantiao/lib/python3.6/site-packages/imageio/core/functions.py", line 172, in get_reader
    request = Request(uri, "r" + mode, **kwargs)
  File "/test/liantiao/lib/python3.6/site-packages/imageio/core/request.py", line 124, in __init__
    self._parse_uri(uri)
  File "/test/liantiao/lib/python3.6/site-packages/imageio/core/request.py", line 260, in _parse_uri
    raise FileNotFoundError("No such file: '%s'" % fn)
FileNotFoundError: No such file: '/test/dataset/multi-focus/mfifb/double/mfifb-001-001.png'

2022-01-12 18:06:44,119 - ./server.py[line:86] - INFO: start call back submitId 2201121806384081
2022-01-12 18:06:44,163 - ./server.py[line:95] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2201121806384081'}
2022-01-12 18:06:44,163 - ./server.py[line:96] - INFO: {"timestamp":1641982004141,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-12 18:08:06,105 - ./server.py[line:60] - INFO: start evaluation submitId 2201121808060081
2022-01-12 18:09:39,207 - ./server.py[line:60] - INFO: start evaluation submitId 2201121809390721
2022-01-12 18:19:40,652 - ./server.py[line:60] - INFO: start evaluation submitId 2201121806384081
/test/evalutaor.py:79: FutureWarning: The behavior of rgb2gray will change in scikit-image 0.19. Currently, rgb2gray allows 2D grayscale image to be passed as inputs and leaves them unmodified as outputs. Starting from version 0.19, 2D arrays will be treated as 1D images with 3 channels.
  img1 = rgb2gray(img1)
/test/evalutaor.py:80: FutureWarning: The behavior of rgb2gray will change in scikit-image 0.19. Currently, rgb2gray allows 2D grayscale image to be passed as inputs and leaves them unmodified as outputs. Starting from version 0.19, 2D arrays will be treated as 1D images with 3 channels.
  img2 = rgb2gray(img2)
2022-01-12 18:27:34,964 - ./server.py[line:86] - INFO: start call back submitId 2201121805519561
2022-01-12 18:27:35,633 - ./server.py[line:95] - INFO: {'evaluateMap': {'mffw-001': {'qmi': '0.45107', 'qte': '0.29210', 'qncie': '0.80879', 'qg': '0.60837'}, 'mffw-002': {'qmi': '0.94948', 'qte': '0.42120', 'qncie': '0.83086', 'qg': '0.47359'}, 'mffw-003': {'qmi': '0.73583', 'qte': '0.35021', 'qncie': '0.81982', 'qg': '0.57169'}, 'mffw-004': {'qmi': '1.04195', 'qte': '0.38581', 'qncie': '0.82851', 'qg': '0.57241'}, 'mffw-005': {'qmi': '0.45417', 'qte': '0.29875', 'qncie': '0.80856', 'qg': '0.61247'}, 'mffw-006': {'qmi': '0.76376', 'qte': '0.34615', 'qncie': '0.82071', 'qg': '0.39394'}, 'mffw-007': {'qmi': '0.51726', 'qte': '0.28478', 'qncie': '0.80955', 'qg': '0.69079'}, 'mffw-008': {'qmi': '0.58450', 'qte': '0.31977', 'qncie': '0.81247', 'qg': '0.59562'}, 'mffw-009': {'qmi': '0.89293', 'qte': '0.44081', 'qncie': '0.82606', 'qg': '0.52990'}, 'mffw-010': {'qmi': '0.82211', 'qte': '0.35817', 'qncie': '0.82150', 'qg': '0.55593'}, 'mffw-011': {'qmi': '0.78628', 'qte': '0.37321', 'qncie': '0.81903', 'qg': '0.43224'}, 'mffw-012': {'qmi': '0.74501', 'qte': '0.42393', 'qncie': '0.81683', 'qg': '0.57785'}, 'mffw-013': {'qmi': '0.78208', 'qte': '0.41628', 'qncie': '0.81760', 'qg': '0.55837'}}, 'submitId': '2201121805519561'}
2022-01-12 18:27:35,633 - ./server.py[line:96] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-12 18:27:35,636 - ./server.py[line:60] - INFO: start evaluation submitId 2201121827087061
2022-01-12 18:37:48,545 - ./server.py[line:86] - INFO: start call back submitId 2201121808060081
2022-01-12 18:37:50,213 - ./server.py[line:95] - INFO: {'evaluateMap': {'vifb-001': {'qmi': '0.52459', 'qte': '0.50373', 'qncie': '0.80997', 'qg': '0.36763'}, 'vifb-002': {'qmi': '0.48476', 'qte': '0.38755', 'qncie': '0.80841', 'qg': '0.40272'}, 'vifb-003': {'qmi': '0.56338', 'qte': '0.38726', 'qncie': '0.81159', 'qg': '0.40851'}, 'vifb-004': {'qmi': '0.36461', 'qte': '0.42739', 'qncie': '0.80603', 'qg': '0.42873'}, 'vifb-005': {'qmi': '0.36633', 'qte': '0.31094', 'qncie': '0.80520', 'qg': '0.39819'}, 'vifb-006': {'qmi': '0.52156', 'qte': '0.48341', 'qncie': '0.80992', 'qg': '0.39630'}, 'vifb-007': {'qmi': '0.49955', 'qte': '0.43367', 'qncie': '0.80772', 'qg': '0.29974'}, 'vifb-008': {'qmi': '0.26299', 'qte': '0.41353', 'qncie': '0.80415', 'qg': '0.40743'}, 'vifb-009': {'qmi': '0.36390', 'qte': '0.31288', 'qncie': '0.80559', 'qg': '0.34880'}, 'vifb-010': {'qmi': '0.40045', 'qte': '0.36796', 'qncie': '0.80636', 'qg': '0.35214'}, 'vifb-011': {'qmi': '0.51689', 'qte': '0.37317', 'qncie': '0.81047', 'qg': '0.01666'}, 'vifb-012': {'qmi': '0.41596', 'qte': '0.48868', 'qncie': '0.80796', 'qg': '0.43597'}, 'vifb-013': {'qmi': '0.32015', 'qte': '0.47494', 'qncie': '0.80516', 'qg': '0.40742'}, 'vifb-014': {'qmi': '0.36998', 'qte': '0.33005', 'qncie': '0.80653', 'qg': '0.35449'}, 'vifb-015': {'qmi': '0.41583', 'qte': '0.34608', 'qncie': '0.80688', 'qg': '0.37353'}, 'vifb-016': {'qmi': '0.45368', 'qte': '0.36149', 'qncie': '0.80880', 'qg': '0.00765'}, 'vifb-017': {'qmi': '0.41405', 'qte': '0.38647', 'qncie': '0.80727', 'qg': '0.37489'}, 'vifb-018': {'qmi': '0.41441', 'qte': '0.33588', 'qncie': '0.80778', 'qg': '0.39723'}, 'vifb-019': {'qmi': '0.32691', 'qte': '0.28963', 'qncie': '0.80521', 'qg': '0.35449'}, 'vifb-020': {'qmi': '0.38977', 'qte': '0.32889', 'qncie': '0.80557', 'qg': '0.00694'}, 'vifb-021': {'qmi': '0.57421', 'qte': '0.52066', 'qncie': '0.80876', 'qg': '0.03167'}}, 'submitId': '2201121808060081'}
2022-01-12 18:37:50,213 - ./server.py[line:96] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-12 18:37:50,214 - ./server.py[line:60] - INFO: start evaluation submitId 2201121827337891
2022-01-12 18:39:26,227 - ./server.py[line:86] - INFO: start call back submitId 2201121805112671
2022-01-12 18:39:27,647 - ./server.py[line:95] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.75491', 'qte': '0.34098', 'qncie': '0.81693', 'qg': '0.65694'}, 'lytro-002': {'qmi': '0.77826', 'qte': '0.36789', 'qncie': '0.82229', 'qg': '0.66662'}, 'lytro-003': {'qmi': '0.65332', 'qte': '0.32144', 'qncie': '0.81628', 'qg': '0.63628'}, 'lytro-004': {'qmi': '0.82160', 'qte': '0.37558', 'qncie': '0.82545', 'qg': '0.65229'}, 'lytro-005': {'qmi': '0.82724', 'qte': '0.37539', 'qncie': '0.82606', 'qg': '0.64799'}, 'lytro-006': {'qmi': '0.81595', 'qte': '0.37701', 'qncie': '0.82487', 'qg': '0.64334'}, 'lytro-007': {'qmi': '0.75937', 'qte': '0.35982', 'qncie': '0.82199', 'qg': '0.62321'}, 'lytro-008': {'qmi': '0.80248', 'qte': '0.37715', 'qncie': '0.82411', 'qg': '0.73112'}, 'lytro-009': {'qmi': '0.70679', 'qte': '0.34373', 'qncie': '0.81757', 'qg': '0.70300'}, 'lytro-010': {'qmi': '0.72675', 'qte': '0.32751', 'qncie': '0.81893', 'qg': '0.73682'}, 'lytro-011': {'qmi': '0.79722', 'qte': '0.36504', 'qncie': '0.82448', 'qg': '0.67205'}, 'lytro-012': {'qmi': '0.81915', 'qte': '0.37373', 'qncie': '0.82383', 'qg': '0.67072'}, 'lytro-013': {'qmi': '0.53700', 'qte': '0.28441', 'qncie': '0.81140', 'qg': '0.74059'}, 'lytro-014': {'qmi': '0.73104', 'qte': '0.33120', 'qncie': '0.82027', 'qg': '0.68070'}, 'lytro-015': {'qmi': '1.04713', 'qte': '0.42882', 'qncie': '0.84030', 'qg': '0.72139'}, 'lytro-016': {'qmi': '0.63564', 'qte': '0.29998', 'qncie': '0.81826', 'qg': '0.46256'}, 'lytro-017': {'qmi': '0.59633', 'qte': '0.30628', 'qncie': '0.81320', 'qg': '0.64517'}, 'lytro-018': {'qmi': '0.94861', 'qte': '0.39170', 'qncie': '0.83129', 'qg': '0.67259'}, 'lytro-019': {'qmi': '0.81168', 'qte': '0.40471', 'qncie': '0.82111', 'qg': '0.64744'}, 'lytro-020': {'qmi': '0.80993', 'qte': '0.36099', 'qncie': '0.82563', 'qg': '0.57967'}}, 'submitId': '2201121805112671'}
2022-01-12 18:39:27,647 - ./server.py[line:96] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-12 18:40:15,107 - ./server.py[line:86] - INFO: start call back submitId 2201121809390721
2022-01-12 18:40:16,476 - ./server.py[line:95] - INFO: {'evaluateMap': {'vifb-001': {'qmi': '0.52951', 'qte': '0.45382', 'qncie': '0.81170', 'qg': '0.42567'}, 'vifb-002': {'qmi': '0.30799', 'qte': '0.34210', 'qncie': '0.80526', 'qg': '0.24684'}, 'vifb-003': {'qmi': '0.58912', 'qte': '0.38257', 'qncie': '0.81299', 'qg': '0.51931'}, 'vifb-004': {'qmi': '0.57703', 'qte': '0.43250', 'qncie': '0.81524', 'qg': '0.62085'}, 'vifb-005': {'qmi': '0.33235', 'qte': '0.31317', 'qncie': '0.80510', 'qg': '0.36058'}, 'vifb-006': {'qmi': '0.63361', 'qte': '0.44721', 'qncie': '0.81779', 'qg': '0.64143'}, 'vifb-007': {'qmi': '0.33907', 'qte': '0.36145', 'qncie': '0.80477', 'qg': '0.39113'}, 'vifb-008': {'qmi': '0.50250', 'qte': '0.42896', 'qncie': '0.81192', 'qg': '0.60835'}, 'vifb-009': {'qmi': '0.36953', 'qte': '0.32374', 'qncie': '0.80646', 'qg': '0.34821'}, 'vifb-010': {'qmi': '0.35453', 'qte': '0.34332', 'qncie': '0.80558', 'qg': '0.33488'}, 'vifb-011': {'qmi': '0.51915', 'qte': '0.36307', 'qncie': '0.81175', 'qg': '0.02213'}, 'vifb-012': {'qmi': '0.50960', 'qte': '0.44894', 'qncie': '0.81256', 'qg': '0.52244'}, 'vifb-013': {'qmi': '0.53179', 'qte': '0.44871', 'qncie': '0.81377', 'qg': '0.62504'}, 'vifb-014': {'qmi': '0.39323', 'qte': '0.35709', 'qncie': '0.80837', 'qg': '0.41970'}, 'vifb-015': {'qmi': '0.34279', 'qte': '0.31314', 'qncie': '0.80571', 'qg': '0.42501'}, 'vifb-016': {'qmi': '0.48357', 'qte': '0.34467', 'qncie': '0.80988', 'qg': '0.00962'}, 'vifb-017': {'qmi': '0.45250', 'qte': '0.35857', 'qncie': '0.80871', 'qg': '0.52557'}, 'vifb-018': {'qmi': '0.49532', 'qte': '0.35198', 'qncie': '0.81177', 'qg': '0.50512'}, 'vifb-019': {'qmi': '0.34919', 'qte': '0.28888', 'qncie': '0.80647', 'qg': '0.37696'}, 'vifb-020': {'qmi': '0.30320', 'qte': '0.29229', 'qncie': '0.80429', 'qg': '0.00729'}, 'vifb-021': {'qmi': '0.23654', 'qte': '0.52463', 'qncie': '0.80444', 'qg': '0.00784'}}, 'submitId': '2201121809390721'}
2022-01-12 18:40:16,476 - ./server.py[line:96] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-12 18:45:36,562 - ./server.py[line:60] - INFO: start evaluation submitId 2201121845363931
2022-01-12 18:54:33,615 - ./server.py[line:86] - INFO: start call back submitId 2201121827087061
2022-01-12 18:54:35,130 - ./server.py[line:95] - INFO: {'evaluateMap': {'vifb-001': {'qmi': '0.52951', 'qte': '0.45382', 'qncie': '0.81170', 'qg': '0.42567'}, 'vifb-002': {'qmi': '0.30799', 'qte': '0.34210', 'qncie': '0.80526', 'qg': '0.24684'}, 'vifb-003': {'qmi': '0.58912', 'qte': '0.38257', 'qncie': '0.81299', 'qg': '0.51931'}, 'vifb-004': {'qmi': '0.57703', 'qte': '0.43250', 'qncie': '0.81524', 'qg': '0.62085'}, 'vifb-005': {'qmi': '0.33235', 'qte': '0.31317', 'qncie': '0.80510', 'qg': '0.36058'}, 'vifb-006': {'qmi': '0.63361', 'qte': '0.44721', 'qncie': '0.81779', 'qg': '0.64143'}, 'vifb-007': {'qmi': '0.33907', 'qte': '0.36145', 'qncie': '0.80477', 'qg': '0.39113'}, 'vifb-008': {'qmi': '0.50250', 'qte': '0.42896', 'qncie': '0.81192', 'qg': '0.60835'}, 'vifb-009': {'qmi': '0.36953', 'qte': '0.32374', 'qncie': '0.80646', 'qg': '0.34821'}, 'vifb-010': {'qmi': '0.35453', 'qte': '0.34332', 'qncie': '0.80558', 'qg': '0.33488'}, 'vifb-011': {'qmi': '0.51915', 'qte': '0.36307', 'qncie': '0.81175', 'qg': '0.02213'}, 'vifb-012': {'qmi': '0.50960', 'qte': '0.44894', 'qncie': '0.81256', 'qg': '0.52244'}, 'vifb-013': {'qmi': '0.53179', 'qte': '0.44871', 'qncie': '0.81377', 'qg': '0.62504'}, 'vifb-014': {'qmi': '0.39323', 'qte': '0.35709', 'qncie': '0.80837', 'qg': '0.41970'}, 'vifb-015': {'qmi': '0.34279', 'qte': '0.31314', 'qncie': '0.80571', 'qg': '0.42501'}, 'vifb-016': {'qmi': '0.48357', 'qte': '0.34467', 'qncie': '0.80988', 'qg': '0.00962'}, 'vifb-017': {'qmi': '0.45250', 'qte': '0.35857', 'qncie': '0.80871', 'qg': '0.52557'}, 'vifb-018': {'qmi': '0.49532', 'qte': '0.35198', 'qncie': '0.81177', 'qg': '0.50512'}, 'vifb-019': {'qmi': '0.34919', 'qte': '0.28888', 'qncie': '0.80647', 'qg': '0.37696'}, 'vifb-020': {'qmi': '0.30320', 'qte': '0.29229', 'qncie': '0.80429', 'qg': '0.00729'}, 'vifb-021': {'qmi': '0.23654', 'qte': '0.52463', 'qncie': '0.80444', 'qg': '0.00784'}}, 'submitId': '2201121827087061'}
2022-01-12 18:54:35,130 - ./server.py[line:96] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-12 18:59:51,092 - ./server.py[line:86] - INFO: start call back submitId 2201121827337891
2022-01-12 18:59:52,457 - ./server.py[line:95] - INFO: {'evaluateMap': {'vifb-001': {'qmi': '0.52459', 'qte': '0.50373', 'qncie': '0.80997', 'qg': '0.36763'}, 'vifb-002': {'qmi': '0.48476', 'qte': '0.38755', 'qncie': '0.80841', 'qg': '0.40272'}, 'vifb-003': {'qmi': '0.56338', 'qte': '0.38726', 'qncie': '0.81159', 'qg': '0.40851'}, 'vifb-004': {'qmi': '0.36461', 'qte': '0.42739', 'qncie': '0.80603', 'qg': '0.42873'}, 'vifb-005': {'qmi': '0.36633', 'qte': '0.31094', 'qncie': '0.80520', 'qg': '0.39819'}, 'vifb-006': {'qmi': '0.52156', 'qte': '0.48341', 'qncie': '0.80992', 'qg': '0.39630'}, 'vifb-007': {'qmi': '0.49955', 'qte': '0.43367', 'qncie': '0.80772', 'qg': '0.29974'}, 'vifb-008': {'qmi': '0.26299', 'qte': '0.41353', 'qncie': '0.80415', 'qg': '0.40743'}, 'vifb-009': {'qmi': '0.36390', 'qte': '0.31288', 'qncie': '0.80559', 'qg': '0.34880'}, 'vifb-010': {'qmi': '0.40045', 'qte': '0.36796', 'qncie': '0.80636', 'qg': '0.35214'}, 'vifb-011': {'qmi': '0.51689', 'qte': '0.37317', 'qncie': '0.81047', 'qg': '0.01666'}, 'vifb-012': {'qmi': '0.41596', 'qte': '0.48868', 'qncie': '0.80796', 'qg': '0.43597'}, 'vifb-013': {'qmi': '0.32015', 'qte': '0.47494', 'qncie': '0.80516', 'qg': '0.40742'}, 'vifb-014': {'qmi': '0.36998', 'qte': '0.33005', 'qncie': '0.80653', 'qg': '0.35449'}, 'vifb-015': {'qmi': '0.41583', 'qte': '0.34608', 'qncie': '0.80688', 'qg': '0.37353'}, 'vifb-016': {'qmi': '0.45368', 'qte': '0.36149', 'qncie': '0.80880', 'qg': '0.00765'}, 'vifb-017': {'qmi': '0.41405', 'qte': '0.38647', 'qncie': '0.80727', 'qg': '0.37489'}, 'vifb-018': {'qmi': '0.41441', 'qte': '0.33588', 'qncie': '0.80778', 'qg': '0.39723'}, 'vifb-019': {'qmi': '0.32691', 'qte': '0.28963', 'qncie': '0.80521', 'qg': '0.35449'}, 'vifb-020': {'qmi': '0.38977', 'qte': '0.32889', 'qncie': '0.80557', 'qg': '0.00694'}, 'vifb-021': {'qmi': '0.57421', 'qte': '0.52066', 'qncie': '0.80876', 'qg': '0.03167'}}, 'submitId': '2201121827337891'}
2022-01-12 18:59:52,457 - ./server.py[line:96] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-12 19:03:44,084 - ./server.py[line:86] - INFO: start call back submitId 2201121845363931
2022-01-12 19:03:45,765 - ./server.py[line:95] - INFO: {'evaluateMap': {'vifb-001': {'qmi': '0.52459', 'qte': '0.50373', 'qncie': '0.80997', 'qg': '0.36763'}, 'vifb-002': {'qmi': '0.48476', 'qte': '0.38755', 'qncie': '0.80841', 'qg': '0.40272'}, 'vifb-003': {'qmi': '0.56338', 'qte': '0.38726', 'qncie': '0.81159', 'qg': '0.40851'}, 'vifb-004': {'qmi': '0.36461', 'qte': '0.42739', 'qncie': '0.80603', 'qg': '0.42873'}, 'vifb-005': {'qmi': '0.36633', 'qte': '0.31094', 'qncie': '0.80520', 'qg': '0.39819'}, 'vifb-006': {'qmi': '0.52156', 'qte': '0.48341', 'qncie': '0.80992', 'qg': '0.39630'}, 'vifb-007': {'qmi': '0.49955', 'qte': '0.43367', 'qncie': '0.80772', 'qg': '0.29974'}, 'vifb-008': {'qmi': '0.26299', 'qte': '0.41353', 'qncie': '0.80415', 'qg': '0.40743'}, 'vifb-009': {'qmi': '0.36390', 'qte': '0.31288', 'qncie': '0.80559', 'qg': '0.34880'}, 'vifb-010': {'qmi': '0.40045', 'qte': '0.36796', 'qncie': '0.80636', 'qg': '0.35214'}, 'vifb-011': {'qmi': '0.51689', 'qte': '0.37317', 'qncie': '0.81047', 'qg': '0.01666'}, 'vifb-012': {'qmi': '0.41596', 'qte': '0.48868', 'qncie': '0.80796', 'qg': '0.43597'}, 'vifb-013': {'qmi': '0.32015', 'qte': '0.47494', 'qncie': '0.80516', 'qg': '0.40742'}, 'vifb-014': {'qmi': '0.36998', 'qte': '0.33005', 'qncie': '0.80653', 'qg': '0.35449'}, 'vifb-015': {'qmi': '0.41583', 'qte': '0.34608', 'qncie': '0.80688', 'qg': '0.37353'}, 'vifb-016': {'qmi': '0.45368', 'qte': '0.36149', 'qncie': '0.80880', 'qg': '0.00765'}, 'vifb-017': {'qmi': '0.41405', 'qte': '0.38647', 'qncie': '0.80727', 'qg': '0.37489'}, 'vifb-018': {'qmi': '0.41441', 'qte': '0.33588', 'qncie': '0.80778', 'qg': '0.39723'}, 'vifb-019': {'qmi': '0.32691', 'qte': '0.28963', 'qncie': '0.80521', 'qg': '0.35449'}, 'vifb-020': {'qmi': '0.38977', 'qte': '0.32889', 'qncie': '0.80557', 'qg': '0.00694'}, 'vifb-021': {'qmi': '0.57421', 'qte': '0.52066', 'qncie': '0.80876', 'qg': '0.03167'}}, 'submitId': '2201121845363931'}
2022-01-12 19:03:45,765 - ./server.py[line:96] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-12 19:10:40,194 - ./server.py[line:60] - INFO: start evaluation submitId 2201121910400821
2022-01-12 19:11:31,415 - ./server.py[line:60] - INFO: start evaluation submitId 2201121911312011
2022-01-12 19:27:18,179 - ./server.py[line:60] - INFO: start evaluation submitId 2201121927168731
2022-01-12 19:27:18,201 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 63, in evaluation
    data_conf = config['task'][task]['dataset'][dataset]
KeyError: 'mefb'

2022-01-12 19:27:18,201 - ./server.py[line:86] - INFO: start call back submitId 2201121927168731
2022-01-12 19:27:18,230 - ./server.py[line:95] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2201121927168731'}
2022-01-12 19:27:18,230 - ./server.py[line:96] - INFO: {"timestamp":1641986838222,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-12 19:29:28,492 - ./server.py[line:86] - INFO: start call back submitId 2201121910400821
2022-01-12 19:29:30,112 - ./server.py[line:95] - INFO: {'evaluateMap': {'vifb-001': {'qmi': '0.53401', 'qte': '0.50158', 'qncie': '0.81049', 'qg': '0.54980'}, 'vifb-002': {'qmi': '0.47964', 'qte': '0.39012', 'qncie': '0.80829', 'qg': '0.45290'}, 'vifb-003': {'qmi': '0.56322', 'qte': '0.38223', 'qncie': '0.81152', 'qg': '0.49615'}, 'vifb-004': {'qmi': '0.33279', 'qte': '0.39125', 'qncie': '0.80533', 'qg': '0.62685'}, 'vifb-005': {'qmi': '0.36250', 'qte': '0.32081', 'qncie': '0.80521', 'qg': '0.46312'}, 'vifb-006': {'qmi': '0.49620', 'qte': '0.47954', 'qncie': '0.80929', 'qg': '0.65466'}, 'vifb-007': {'qmi': '0.54001', 'qte': '0.42656', 'qncie': '0.80918', 'qg': '0.31685'}, 'vifb-008': {'qmi': '0.23308', 'qte': '0.38831', 'qncie': '0.80371', 'qg': '0.62322'}, 'vifb-009': {'qmi': '0.34134', 'qte': '0.34976', 'qncie': '0.80519', 'qg': '0.46709'}, 'vifb-010': {'qmi': '0.31660', 'qte': '0.33279', 'qncie': '0.80489', 'qg': '0.32902'}, 'vifb-011': {'qmi': '0.53795', 'qte': '0.36947', 'qncie': '0.81093', 'qg': '0.02773'}, 'vifb-012': {'qmi': '0.37876', 'qte': '0.47437', 'qncie': '0.80696', 'qg': '0.56713'}, 'vifb-013': {'qmi': '0.29360', 'qte': '0.46421', 'qncie': '0.80467', 'qg': '0.63430'}, 'vifb-014': {'qmi': '0.34960', 'qte': '0.33002', 'qncie': '0.80618', 'qg': '0.48555'}, 'vifb-015': {'qmi': '0.40069', 'qte': '0.34066', 'qncie': '0.80662', 'qg': '0.41481'}, 'vifb-016': {'qmi': '0.45703', 'qte': '0.34481', 'qncie': '0.80896', 'qg': '0.00968'}, 'vifb-017': {'qmi': '0.35854', 'qte': '0.37102', 'qncie': '0.80622', 'qg': '0.49180'}, 'vifb-018': {'qmi': '0.39281', 'qte': '0.32114', 'qncie': '0.80707', 'qg': '0.51920'}, 'vifb-019': {'qmi': '0.31282', 'qte': '0.28088', 'qncie': '0.80506', 'qg': '0.45193'}, 'vifb-020': {'qmi': '0.38798', 'qte': '0.31845', 'qncie': '0.80565', 'qg': '0.00943'}, 'vifb-021': {'qmi': '0.53229', 'qte': '0.55839', 'qncie': '0.80803', 'qg': '0.03569'}}, 'submitId': '2201121910400821'}
2022-01-12 19:29:30,112 - ./server.py[line:96] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-12 19:30:10,429 - ./server.py[line:86] - INFO: start call back submitId 2201121911312011
2022-01-12 19:30:12,140 - ./server.py[line:95] - INFO: {'evaluateMap': {'vifb-001': {'qmi': '0.53401', 'qte': '0.50158', 'qncie': '0.81049', 'qg': '0.54980'}, 'vifb-002': {'qmi': '0.47964', 'qte': '0.39012', 'qncie': '0.80829', 'qg': '0.45290'}, 'vifb-003': {'qmi': '0.56322', 'qte': '0.38223', 'qncie': '0.81152', 'qg': '0.49615'}, 'vifb-004': {'qmi': '0.33279', 'qte': '0.39125', 'qncie': '0.80533', 'qg': '0.62685'}, 'vifb-005': {'qmi': '0.36250', 'qte': '0.32081', 'qncie': '0.80521', 'qg': '0.46312'}, 'vifb-006': {'qmi': '0.49620', 'qte': '0.47954', 'qncie': '0.80929', 'qg': '0.65466'}, 'vifb-007': {'qmi': '0.54001', 'qte': '0.42656', 'qncie': '0.80918', 'qg': '0.31685'}, 'vifb-008': {'qmi': '0.23308', 'qte': '0.38831', 'qncie': '0.80371', 'qg': '0.62322'}, 'vifb-009': {'qmi': '0.34134', 'qte': '0.34976', 'qncie': '0.80519', 'qg': '0.46709'}, 'vifb-010': {'qmi': '0.31660', 'qte': '0.33279', 'qncie': '0.80489', 'qg': '0.32902'}, 'vifb-011': {'qmi': '0.53795', 'qte': '0.36947', 'qncie': '0.81093', 'qg': '0.02773'}, 'vifb-012': {'qmi': '0.37876', 'qte': '0.47437', 'qncie': '0.80696', 'qg': '0.56713'}, 'vifb-013': {'qmi': '0.29360', 'qte': '0.46421', 'qncie': '0.80467', 'qg': '0.63430'}, 'vifb-014': {'qmi': '0.34960', 'qte': '0.33002', 'qncie': '0.80618', 'qg': '0.48555'}, 'vifb-015': {'qmi': '0.40069', 'qte': '0.34066', 'qncie': '0.80662', 'qg': '0.41481'}, 'vifb-016': {'qmi': '0.45703', 'qte': '0.34481', 'qncie': '0.80896', 'qg': '0.00968'}, 'vifb-017': {'qmi': '0.35854', 'qte': '0.37102', 'qncie': '0.80622', 'qg': '0.49180'}, 'vifb-018': {'qmi': '0.39281', 'qte': '0.32114', 'qncie': '0.80707', 'qg': '0.51920'}, 'vifb-019': {'qmi': '0.31282', 'qte': '0.28088', 'qncie': '0.80506', 'qg': '0.45193'}, 'vifb-020': {'qmi': '0.38798', 'qte': '0.31845', 'qncie': '0.80565', 'qg': '0.00943'}, 'vifb-021': {'qmi': '0.53229', 'qte': '0.55839', 'qncie': '0.80803', 'qg': '0.03569'}}, 'submitId': '2201121911312011'}
2022-01-12 19:30:12,141 - ./server.py[line:96] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-01-12 19:41:30,727 - ./server.py[line:86] - INFO: start call back submitId 2201121806384081
2022-01-12 19:41:41,224 - ./server.py[line:95] - INFO: {'evaluateMap': {'mfifb-001': {'qmi': '1.39999', 'qte': '0.42627', 'qncie': '0.86065', 'qg': '0.00699'}, 'mfifb-002': {'qmi': '0.69267', 'qte': '0.35993', 'qncie': '0.81995', 'qg': '0.56097'}, 'mfifb-003': {'qmi': '1.17840', 'qte': '0.43887', 'qncie': '0.84583', 'qg': '0.00605'}, 'mfifb-004': {'qmi': '0.68010', 'qte': '0.34865', 'qncie': '0.82045', 'qg': '0.49059'}, 'mfifb-005': {'qmi': '1.46150', 'qte': '0.44403', 'qncie': '0.87290', 'qg': '0.00868'}, 'mfifb-006': {'qmi': '1.25108', 'qte': '0.42929', 'qncie': '0.85015', 'qg': '0.04396'}, 'mfifb-007': {'qmi': '1.43969', 'qte': '0.42985', 'qncie': '0.87171', 'qg': '0.00756'}, 'mfifb-008': {'qmi': '1.38800', 'qte': '0.42739', 'qncie': '0.86825', 'qg': '0.00948'}, 'mfifb-009': {'qmi': '1.60677', 'qte': '0.46642', 'qncie': '0.88482', 'qg': '0.90082'}, 'mfifb-010': {'qmi': '1.41935', 'qte': '0.43401', 'qncie': '0.87049', 'qg': '0.00684'}, 'mfifb-011': {'qmi': '1.17985', 'qte': '0.39587', 'qncie': '0.85080', 'qg': '0.00621'}, 'mfifb-012': {'qmi': '1.48876', 'qte': '0.48603', 'qncie': '0.86715', 'qg': '0.00674'}, 'mfifb-013': {'qmi': '1.40004', 'qte': '0.44292', 'qncie': '0.87484', 'qg': '0.89352'}, 'mfifb-014': {'qmi': '1.58448', 'qte': '0.45015', 'qncie': '0.85407', 'qg': '0.92026'}, 'mfifb-015': {'qmi': '1.50117', 'qte': '0.61930', 'qncie': '0.84175', 'qg': '0.88453'}, 'mfifb-016': {'qmi': '1.27756', 'qte': '0.46655', 'qncie': '0.84619', 'qg': '0.85423'}, 'mfifb-017': {'qmi': '1.39601', 'qte': '0.42259', 'qncie': '0.86482', 'qg': '0.90155'}, 'mfifb-018': {'qmi': '1.41680', 'qte': '0.44058', 'qncie': '0.87139', 'qg': '0.88314'}, 'mfifb-019': {'qmi': '1.44299', 'qte': '0.41535', 'qncie': '0.87345', 'qg': '0.00655'}, 'mfifb-020': {'qmi': '1.50668', 'qte': '0.43558', 'qncie': '0.87971', 'qg': '0.00768'}, 'mfifb-021': {'qmi': '1.29775', 'qte': '0.38801', 'qncie': '0.85507', 'qg': '0.90838'}, 'mfifb-022': {'qmi': '1.45720', 'qte': '0.43460', 'qncie': '0.87862', 'qg': '0.01041'}, 'mfifb-023': {'qmi': '1.49231', 'qte': '0.46159', 'qncie': '0.87061', 'qg': '0.87150'}, 'mfifb-024': {'qmi': '1.28324', 'qte': '0.45249', 'qncie': '0.85475', 'qg': '0.00619'}, 'mfifb-025': {'qmi': '1.23495', 'qte': '0.39501', 'qncie': '0.85283', 'qg': '0.00693'}, 'mfifb-026': {'qmi': '1.22115', 'qte': '0.39062', 'qncie': '0.85604', 'qg': '0.00642'}, 'mfifb-027': {'qmi': '1.46341', 'qte': '0.44204', 'qncie': '0.86233', 'qg': '0.00650'}, 'mfifb-028': {'qmi': '0.75672', 'qte': '0.41742', 'qncie': '0.82071', 'qg': '0.48416'}, 'mfifb-029': {'qmi': '0.63401', 'qte': '0.33066', 'qncie': '0.81458', 'qg': '0.59381'}, 'mfifb-030': {'qmi': '0.75491', 'qte': '0.34098', 'qncie': '0.81693', 'qg': '0.65694'}, 'mfifb-031': {'qmi': '0.77826', 'qte': '0.36789', 'qncie': '0.82229', 'qg': '0.66662'}, 'mfifb-032': {'qmi': '0.65332', 'qte': '0.32144', 'qncie': '0.81628', 'qg': '0.63628'}, 'mfifb-033': {'qmi': '0.82160', 'qte': '0.37558', 'qncie': '0.82545', 'qg': '0.65229'}, 'mfifb-034': {'qmi': '0.82724', 'qte': '0.37539', 'qncie': '0.82606', 'qg': '0.64799'}, 'mfifb-035': {'qmi': '0.81595', 'qte': '0.37701', 'qncie': '0.82487', 'qg': '0.64334'}, 'mfifb-036': {'qmi': '0.75937', 'qte': '0.35982', 'qncie': '0.82199', 'qg': '0.62321'}, 'mfifb-037': {'qmi': '0.80248', 'qte': '0.37715', 'qncie': '0.82411', 'qg': '0.73112'}, 'mfifb-038': {'qmi': '0.70679', 'qte': '0.34373', 'qncie': '0.81757', 'qg': '0.70300'}, 'mfifb-039': {'qmi': '0.72675', 'qte': '0.32751', 'qncie': '0.81893', 'qg': '0.73682'}, 'mfifb-040': {'qmi': '0.79722', 'qte': '0.36504', 'qncie': '0.82448', 'qg': '0.67205'}, 'mfifb-041': {'qmi': '0.81915', 'qte': '0.37373', 'qncie': '0.82383', 'qg': '0.67072'}, 'mfifb-042': {'qmi': '0.53700', 'qte': '0.28441', 'qncie': '0.81140', 'qg': '0.74059'}, 'mfifb-043': {'qmi': '0.73104', 'qte': '0.33120', 'qncie': '0.82027', 'qg': '0.68070'}, 'mfifb-044': {'qmi': '1.04713', 'qte': '0.42882', 'qncie': '0.84030', 'qg': '0.72139'}, 'mfifb-045': {'qmi': '0.63564', 'qte': '0.29998', 'qncie': '0.81826', 'qg': '0.46256'}, 'mfifb-046': {'qmi': '0.59633', 'qte': '0.30628', 'qncie': '0.81320', 'qg': '0.64517'}, 'mfifb-047': {'qmi': '0.94861', 'qte': '0.39170', 'qncie': '0.83129', 'qg': '0.67259'}, 'mfifb-048': {'qmi': '0.81168', 'qte': '0.40471', 'qncie': '0.82111', 'qg': '0.64744'}, 'mfifb-049': {'qmi': '0.80993', 'qte': '0.36099', 'qncie': '0.82563', 'qg': '0.57967'}, 'mfifb-050': {'qmi': '0.45107', 'qte': '0.29210', 'qncie': '0.80879', 'qg': '0.60837'}, 'mfifb-051': {'qmi': '0.94948', 'qte': '0.42120', 'qncie': '0.83086', 'qg': '0.47359'}, 'mfifb-052': {'qmi': '0.73583', 'qte': '0.35021', 'qncie': '0.81982', 'qg': '0.57169'}, 'mfifb-053': {'qmi': '1.04195', 'qte': '0.38581', 'qncie': '0.82851', 'qg': '0.57241'}, 'mfifb-054': {'qmi': '0.45417', 'qte': '0.29875', 'qncie': '0.80856', 'qg': '0.61247'}, 'mfifb-055': {'qmi': '0.76376', 'qte': '0.34615', 'qncie': '0.82071', 'qg': '0.39394'}, 'mfifb-056': {'qmi': '0.51726', 'qte': '0.28478', 'qncie': '0.80955', 'qg': '0.69079'}, 'mfifb-057': {'qmi': '0.58450', 'qte': '0.31977', 'qncie': '0.81247', 'qg': '0.59562'}, 'mfifb-058': {'qmi': '0.89293', 'qte': '0.44081', 'qncie': '0.82606', 'qg': '0.52990'}, 'mfifb-059': {'qmi': '0.82211', 'qte': '0.35817', 'qncie': '0.82150', 'qg': '0.55593'}, 'mfifb-060': {'qmi': '0.78628', 'qte': '0.37321', 'qncie': '0.81903', 'qg': '0.43224'}, 'mfifb-061': {'qmi': '0.74501', 'qte': '0.42393', 'qncie': '0.81683', 'qg': '0.57785'}, 'mfifb-062': {'qmi': '0.78208', 'qte': '0.41628', 'qncie': '0.81760', 'qg': '0.55837'}, 'mfifb-063': {'qmi': '0.32895', 'qte': '0.21060', 'qncie': '0.80499', 'qg': '0.61407'}, 'mfifb-064': {'qmi': '0.90765', 'qte': '0.45963', 'qncie': '0.82264', 'qg': '0.63203'}, 'mfifb-065': {'qmi': '0.93121', 'qte': '0.44685', 'qncie': '0.82045', 'qg': '0.52404'}, 'mfifb-066': {'qmi': '0.60391', 'qte': '0.34747', 'qncie': '0.81504', 'qg': '0.53524'}, 'mfifb-067': {'qmi': '0.60271', 'qte': '0.33357', 'qncie': '0.81350', 'qg': '0.51492'}, 'mfifb-068': {'qmi': '0.42709', 'qte': '0.26023', 'qncie': '0.80730', 'qg': '0.54719'}, 'mfifb-069': {'qmi': '0.49610', 'qte': '0.27242', 'qncie': '0.80883', 'qg': '0.51506'}, 'mfifb-070': {'qmi': '0.72278', 'qte': '0.34928', 'qncie': '0.81693', 'qg': '0.45882'}, 'mfifb-071': {'qmi': '0.45893', 'qte': '0.29235', 'qncie': '0.80865', 'qg': '0.48643'}, 'mfifb-072': {'qmi': '0.65084', 'qte': '0.40405', 'qncie': '0.81411', 'qg': '0.44683'}, 'mfifb-073': {'qmi': '0.72040', 'qte': '0.49850', 'qncie': '0.81367', 'qg': '0.00473'}, 'mfifb-074': {'qmi': '0.71454', 'qte': '0.43960', 'qncie': '0.81753', 'qg': '0.47039'}, 'mfifb-075': {'qmi': '0.55759', 'qte': '0.33854', 'qncie': '0.80829', 'qg': '0.45200'}, 'mfifb-076': {'qmi': '0.49185', 'qte': '0.39088', 'qncie': '0.80668', 'qg': '0.54656'}, 'mfifb-077': {'qmi': '0.60708', 'qte': '0.34416', 'qncie': '0.81095', 'qg': '0.48299'}, 'mfifb-078': {'qmi': '0.51941', 'qte': '0.27739', 'qncie': '0.81017', 'qg': '0.60642'}, 'mfifb-079': {'qmi': '0.57699', 'qte': '0.31685', 'qncie': '0.81213', 'qg': '0.55037'}, 'mfifb-080': {'qmi': '0.39561', 'qte': '0.22909', 'qncie': '0.80608', 'qg': '0.56408'}, 'mfifb-081': {'qmi': '0.65540', 'qte': '0.30770', 'qncie': '0.81017', 'qg': '0.59972'}, 'mfifb-082': {'qmi': '0.61476', 'qte': '0.33467', 'qncie': '0.81350', 'qg': '0.54508'}, 'mfifb-083': {'qmi': '0.55344', 'qte': '0.30709', 'qncie': '0.81129', 'qg': '0.55940'}, 'mfifb-084': {'qmi': '0.68479', 'qte': '0.34802', 'qncie': '0.81489', 'qg': '0.55049'}, 'mfifb-085': {'qmi': '0.99756', 'qte': '0.42095', 'qncie': '0.83219', 'qg': '0.00591'}, 'mfifb-086': {'qmi': '1.04002', 'qte': '0.49287', 'qncie': '0.83215', 'qg': '0.00534'}, 'mfifb-087': {'qmi': '1.05550', 'qte': '0.43762', 'qncie': '0.83293', 'qg': '0.01162'}, 'mfifb-088': {'qmi': '0.88501', 'qte': '0.39362', 'qncie': '0.82479', 'qg': '0.00594'}, 'mfifb-089': {'qmi': '0.74435', 'qte': '0.38106', 'qncie': '0.81986', 'qg': '0.00895'}, 'mfifb-090': {'qmi': '0.91507', 'qte': '0.39734', 'qncie': '0.82777', 'qg': '0.00469'}, 'mfifb-091': {'qmi': '1.36999', 'qte': '0.44257', 'qncie': '0.86403', 'qg': '0.00818'}, 'mfifb-092': {'qmi': '1.27851', 'qte': '0.45494', 'qncie': '0.85456', 'qg': '0.00703'}, 'mfifb-093': {'qmi': '0.41797', 'qte': '0.25502', 'qncie': '0.80721', 'qg': '0.00514'}, 'mfifb-094': {'qmi': '0.95454', 'qte': '0.37878', 'qncie': '0.84076', 'qg': '0.49548'}, 'mfifb-095': {'qmi': '0.71703', 'qte': '0.44019', 'qncie': '0.81489', 'qg': '0.61741'}, 'mfifb-096': {'qmi': '0.91889', 'qte': '0.39019', 'qncie': '0.83542', 'qg': '0.58559'}, 'mfifb-097': {'qmi': '0.84037', 'qte': '0.36629', 'qncie': '0.83437', 'qg': '0.54641'}, 'mfifb-098': {'qmi': '0.69091', 'qte': '0.33277', 'qncie': '0.81872', 'qg': '0.51427'}, 'mfifb-099': {'qmi': '0.74230', 'qte': '0.36956', 'qncie': '0.81802', 'qg': '0.65402'}, 'mfifb-100': {'qmi': '0.85816', 'qte': '0.37915', 'qncie': '0.83223', 'qg': '0.45812'}, 'mfifb-101': {'qmi': '1.21144', 'qte': '0.43531', 'qncie': '0.85507', 'qg': '0.74963'}, 'mfifb-102': {'qmi': '0.84246', 'qte': '0.37067', 'qncie': '0.82635', 'qg': '0.63192'}, 'mfifb-103': {'qmi': '0.84368', 'qte': '0.39993', 'qncie': '0.83081', 'qg': '0.51228'}, 'mfifb-104': {'qmi': '0.67397', 'qte': '0.34091', 'qncie': '0.82402', 'qg': '0.77464'}, 'mfifb-105': {'qmi': '0.65540', 'qte': '0.30770', 'qncie': '0.81017', 'qg': '0.59972'}}, 'submitId': '2201121806384081'}
2022-01-12 19:41:41,225 - ./server.py[line:96] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
./server.py:21: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(f)
2022-01-13 20:11:14,832 - ./server.py[line:60] - INFO: start evaluation submitId 2201061610253671
2022-01-13 20:11:16,944 - ./server.py[line:60] - INFO: start evaluation submitId 2201061614064031
2022-01-13 20:11:19,250 - ./server.py[line:60] - INFO: start evaluation submitId 2201121805112671
2022-01-13 20:11:23,327 - ./server.py[line:60] - INFO: start evaluation submitId 2201121805519561
2022-01-13 20:11:27,883 - ./server.py[line:60] - INFO: start evaluation submitId 2201121806384081
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
WARNING: You should compile the MEX version of "corrDn.c",
         found in the MEX subdirectory of matlabPyrTools, and put it in your matlab path.  It is MUCH faster, and provides more boundary-handling options.
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          /test/evalutaor.py:79: FutureWarning: The behavior of rgb2gray will change in scikit-image 0.19. Currently, rgb2gray allows 2D grayscale image to be passed as inputs and leaves them unmodified as outputs. Starting from version 0.19, 2D arrays will be treated as 1D images with 3 channels.
  img1 = rgb2gray(img1)
/test/evalutaor.py:80: FutureWarning: The behavior of rgb2gray will change in scikit-image 0.19. Currently, rgb2gray allows 2D grayscale image to be passed as inputs and leaves them unmodified as outputs. Starting from version 0.19, 2D arrays will be treated as 1D images with 3 channels.
  img2 = rgb2gray(img2)
/test/evalutaor.py:315: UserWarning: DEPRECATED: skimage.measure.compare_ssim has been moved to skimage.metrics.structural_similarity. It will be removed from skimage.measure in version 0.18.
  im1_f_ssim = measure.compare_ssim(kwargs['img1'],kwargs['fused'])
/test/evalutaor.py:316: UserWarning: DEPRECATED: skimage.measure.compare_ssim has been moved to skimage.metrics.structural_similarity. It will be removed from skimage.measure in version 0.18.
  im2_f_ssim = measure.compare_ssim(kwargs['img2'], kwargs['fused'])
/test/liantiao/lib/python3.6/site-packages/skimage/measure/_structural_similarity.py:17: UserWarning: Inputs have mismatched dtype.  Setting data_range based on im1.dtype.
  **kwargs)
2022-01-13 21:59:41,730 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 75, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 102, in get_evaluation
    fused_mat=fused_mat)
  File "/test/evalutaor.py", line 302, in evaluate_by_mef_ssim
    value = self.matlab_engine.mef_ssim(kwargs['img1_mat'], kwargs['img2_mat'], kwargs['fused_mat'])
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 71, in __call__
    _stderr, feval=True).result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/fevalfuture.py", line 82, in result
    self._result = pythonengine.getFEvalResult(self._future,self._nargout, None, out=self._out, err=self._err)
matlab.engine.EngineError: MATLAB function cannot be evaluated

2022-01-13 21:59:41,730 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 75, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 102, in get_evaluation
    fused_mat=fused_mat)
  File "/test/evalutaor.py", line 331, in evaluate_by_fmi_edge
    value = self.matlab_engine.analysis_fmi(kwargs['img1_mat'], kwargs['img2_mat'], kwargs['fused_mat'])
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 71, in __call__
    _stderr, feval=True).result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/fevalfuture.py", line 82, in result
    self._result = pythonengine.getFEvalResult(self._future,self._nargout, None, out=self._out, err=self._err)
matlab.engine.EngineError: MATLAB function cannot be evaluated

2022-01-13 21:59:41,730 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 75, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 102, in get_evaluation
    fused_mat=fused_mat)
  File "/test/evalutaor.py", line 388, in evaluate_by_scd
    value = self.matlab_engine.analysis_SCD(kwargs['img1_mat'], kwargs['img2_mat'], kwargs['fused_mat'])
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 71, in __call__
    _stderr, feval=True).result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/fevalfuture.py", line 82, in result
    self._result = pythonengine.getFEvalResult(self._future,self._nargout, None, out=self._out, err=self._err)
matlab.engine.EngineError: MATLAB function cannot be evaluated

2022-01-13 21:59:41,732 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 75, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 102, in get_evaluation
    fused_mat=fused_mat)
  File "/test/evalutaor.py", line 373, in evaluate_by_nabf
    value = self.matlab_engine.analysis_nabf(kwargs['img1_mat'], kwargs['img2_mat'], kwargs['fused_mat'])
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 71, in __call__
    _stderr, feval=True).result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/fevalfuture.py", line 82, in result
    self._result = pythonengine.getFEvalResult(self._future,self._nargout, None, out=self._out, err=self._err)
matlab.engine.EngineError: MATLAB function cannot be evaluated

2022-01-13 21:59:41,731 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 75, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 102, in get_evaluation
    fused_mat=fused_mat)
  File "/test/evalutaor.py", line 202, in evaluate_by_qp
    value = self.matlab_engine.metricZhao(kwargs['img1_mat'], kwargs['img2_mat'], kwargs['fused_mat'])
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 71, in __call__
    _stderr, feval=True).result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/fevalfuture.py", line 82, in result
    self._result = pythonengine.getFEvalResult(self._future,self._nargout, None, out=self._out, err=self._err)
matlab.engine.EngineError: MATLAB function cannot be evaluated

2022-01-13 21:59:41,737 - ./server.py[line:86] - INFO: start call back submitId 2201121806384081
2022-01-13 21:59:41,741 - ./server.py[line:86] - INFO: start call back submitId 2201061614064031
2022-01-13 21:59:41,741 - ./server.py[line:86] - INFO: start call back submitId 2201121805112671
2022-01-13 21:59:41,742 - ./server.py[line:86] - INFO: start call back submitId 2201061610253671
2022-01-13 21:59:41,743 - ./server.py[line:86] - INFO: start call back submitId 2201121805519561
2022-01-13 21:59:41,855 - ./server.py[line:95] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.75491', 'qte': '0.34098', 'qncie': '0.81693', 'qg': '0.65694', 'qm': '2.96231', 'qsf': '-0.04504', 'qp': '0.74827', 'qs': '0.99988', 'qc': '0.79329', 'qy': '0.95869', 'qcv': '22.30692', 'viff': '0.86300', 'mef_ssim': '1.00000', 'ssim_a': '0.92633', 'fmi_edge': '0.93732', 'fmi_dct': '0.36948', 'fmi_w': '0.46009', 'nabf': '0.09965', 'scd': '0.31950', 'sd': '77.14777', 'sf': '0.00000', 'cc': '0.96127'}, 'lytro-002': {'qmi': '0.77826', 'qte': '0.36789', 'qncie': '0.82229', 'qg': '0.66662', 'qm': '2.96737', 'qsf': '-0.03920', 'qp': '0.84899', 'qs': '0.99982', 'qc': '0.82144', 'qy': '0.94862', 'qcv': '28.56273', 'viff': '0.88394', 'mef_ssim': '1.00000', 'ssim_a': '0.92343', 'fmi_edge': '0.87093', 'fmi_dct': '0.40563', 'fmi_w': '0.50340', 'nabf': '0.10305', 'scd': '0.63195', 'sd': '105.79073', 'sf': '0.00000', 'cc': '0.97550'}, 'lytro-003': {'qmi': '0.65332', 'qte': '0.32144', 'qncie': '0.81628', 'qg': '0.63628', 'qm': '2.96228', 'qsf': '-0.04456', 'qp': '0.78321', 'qs': '0.99981', 'qc': '0.79840', 'qy': '0.93651', 'qcv': '110.15445', 'viff': '0.83968', 'mef_ssim': '1.00000', 'ssim_a': '0.88556', 'fmi_edge': '0.87842', 'fmi_dct': '0.37417', 'fmi_w': '0.44575', 'nabf': '0.09965', 'scd': '0.63231', 'sd': '102.43434', 'sf': '0.00000', 'cc': '0.96501'}, 'lytro-004': {'qmi': '0.82160', 'qte': '0.37558', 'qncie': '0.82545', 'qg': '0.65229', 'qm': '2.96039', 'qsf': '-0.03748', 'qp': '0.80625', 'qs': '0.99986', 'qc': '0.84154', 'qy': '0.94189', 'qcv': '36.35671', 'viff': '0.92207', 'mef_ssim': '1.00000', 'ssim_a': '0.92410', 'fmi_edge': '0.91408', 'fmi_dct': '0.40584', 'fmi_w': '0.48016', 'nabf': '0.10358', 'scd': '0.48223', 'sd': '124.66314', 'sf': '0.00000', 'cc': '0.98272'}, 'result': 'evalution error'}, 'submitId': '2201121805112671'}
2022-01-13 21:59:41,855 - ./server.py[line:96] - INFO: {"timestamp":1642082381850,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 1744] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-13 21:59:41,856 - ./server.py[line:60] - INFO: start evaluation submitId 2201121808060081
2022-01-13 21:59:41,862 - ./server.py[line:95] - INFO: {'evaluateMap': {'mffw-001': {'qmi': '0.45107', 'qte': '0.29210', 'qncie': '0.80879', 'qg': '0.60837', 'qm': '2.91713', 'qsf': '-0.06115', 'qp': '0.67126', 'qs': '0.99944', 'qc': '0.77598', 'qy': '0.94952', 'qcv': '185.67767', 'viff': '0.78515', 'mef_ssim': '0.99999', 'ssim_a': '0.72939', 'fmi_edge': '0.80215', 'fmi_dct': '0.38034', 'fmi_w': '0.50360', 'nabf': '0.09975', 'scd': '0.74924', 'sd': '54.62315', 'sf': '0.00000', 'cc': '0.88280'}, 'mffw-002': {'qmi': '0.94948', 'qte': '0.42120', 'qncie': '0.83086', 'qg': '0.47359', 'qm': '2.93639', 'qsf': '-0.11514', 'qp': '0.79942', 'qs': '0.99984', 'qc': '0.73980', 'qy': '0.77747', 'qcv': '29.71361', 'viff': '0.86076', 'mef_ssim': '1.00000', 'ssim_a': '0.91707', 'fmi_edge': '0.90314', 'fmi_dct': '0.35926', 'fmi_w': '0.32952', 'nabf': '0.09736', 'scd': '0.41978', 'sd': '133.81550', 'sf': '0.00000', 'cc': '0.98874'}, 'mffw-003': {'qmi': '0.73583', 'qte': '0.35021', 'qncie': '0.81982', 'qg': '0.57169', 'qm': '2.92434', 'qsf': '-0.13787', 'qp': '0.80359', 'qs': '0.99958', 'qc': '0.81353', 'qy': '0.88568', 'qcv': '22.54626', 'viff': '0.67652', 'mef_ssim': '1.00000', 'ssim_a': '0.90193', 'fmi_edge': '0.83700', 'fmi_dct': '0.37963', 'fmi_w': '0.42061', 'nabf': '0.07722', 'scd': '0.07665', 'sd': '136.03726', 'sf': '0.00000', 'cc': '0.96487'}, 'mffw-004': {'qmi': '1.04195', 'qte': '0.38581', 'qncie': '0.82851', 'qg': '0.57241', 'qm': '2.94996', 'qsf': '-0.00898', 'qp': '0.48183', 'qs': '0.99981', 'qc': '0.63270', 'qy': '0.66482', 'qcv': '8.51106', 'viff': '0.98403', 'mef_ssim': '1.00000', 'ssim_a': '0.95569', 'fmi_edge': '0.92810', 'fmi_dct': '0.34650', 'fmi_w': '0.30200', 'nabf': '0.22009', 'scd': '1.12777', 'sd': '88.64733', 'sf': '0.00000', 'cc': '0.95402'}, 'mffw-005': {'qmi': '0.45417', 'qte': '0.29875', 'qncie': '0.80856', 'qg': '0.61247', 'qm': '2.87361', 'qsf': '-0.07145', 'qp': '0.72451', 'qs': '0.99952', 'qc': '0.80573', 'qy': '0.94072', 'qcv': '115.84330', 'viff': '0.92430', 'mef_ssim': '0.99999', 'ssim_a': '0.73664', 'fmi_edge': '0.76593', 'fmi_dct': '0.37646', 'fmi_w': '0.48334', 'nabf': '0.09780', 'scd': '1.05687', 'sd': '80.16777', 'sf': '0.00000', 'cc': '0.89582'}, 'result': 'evalution error'}, 'submitId': '2201121805519561'}
2022-01-13 21:59:41,862 - ./server.py[line:96] - INFO: {"timestamp":1642082381855,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 2166] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-13 21:59:41,862 - ./server.py[line:60] - INFO: start evaluation submitId 2201121809390721
2022-01-13 21:59:41,867 - ./server.py[line:95] - INFO: {'evaluateMap': {'vifb-001': {'qmi': '0.52459', 'qte': '0.50373', 'qncie': '0.80997', 'qg': '0.36763', 'qm': '2.78831', 'qsf': '-0.38717', 'qp': '0.21405', 'qs': '0.99755', 'qc': '0.49231', 'qy': '0.64425', 'qcv': '870.65405', 'viff': '0.39370', 'mef_ssim': '1.00000', 'ssim_a': '0.86303', 'fmi_edge': '0.96369', 'fmi_dct': '0.32285', 'fmi_w': '0.28956', 'nabf': '0.10474', 'scd': '0.87516', 'sd': '79.46198', 'sf': '0.00000', 'cc': '0.74417'}, 'vifb-002': {'qmi': '0.48476', 'qte': '0.38755', 'qncie': '0.80841', 'qg': '0.40272', 'qm': '2.88818', 'qsf': '-0.39023', 'qp': '0.36969', 'qs': '0.99588', 'qc': '0.58676', 'qy': '0.68863', 'qcv': '426.19761', 'viff': '0.45713', 'mef_ssim': '0.99999', 'ssim_a': '0.83556', 'fmi_edge': '0.91439', 'fmi_dct': '0.24897', 'fmi_w': '0.30157', 'nabf': '0.04401', 'scd': '0.84116', 'sd': '81.09907', 'sf': '0.00000', 'cc': '0.88841'}, 'vifb-003': {'qmi': '0.56338', 'qte': '0.38726', 'qncie': '0.81159', 'qg': '0.40851', 'qm': '2.80614', 'qsf': '-0.38026', 'qp': '0.41897', 'qs': '0.99466', 'qc': '0.52200', 'qy': '0.69753', 'qcv': '673.10291', 'viff': '0.44191', 'mef_ssim': '0.99998', 'ssim_a': '0.78938', 'fmi_edge': '0.85488', 'fmi_dct': '0.34529', 'fmi_w': '0.35436', 'nabf': '0.05889', 'scd': '1.40410', 'sd': '64.62090', 'sf': '0.00000', 'cc': '0.63602'}, 'vifb-004': {'qmi': '0.36461', 'qte': '0.42739', 'qncie': '0.80603', 'qg': '0.42873', 'qm': '2.76632', 'qsf': '-0.39958', 'qp': '0.34857', 'qs': '0.99875', 'qc': '0.53175', 'qy': '0.76491', 'qcv': '507.33886', 'viff': '0.35523', 'mef_ssim': '0.99999', 'ssim_a': '0.88928', 'fmi_edge': '0.94923', 'fmi_dct': '0.35050', 'fmi_w': '0.33467', 'nabf': '0.07971', 'scd': '1.08158', 'sd': '53.07098', 'sf': '0.00000', 'cc': '0.64175'}, 'vifb-005': {'qmi': '0.36633', 'qte': '0.31094', 'qncie': '0.80520', 'qg': '0.39819', 'qm': '2.83469', 'qsf': '-0.41958', 'qp': '0.38256', 'qs': '0.99769', 'qc': '0.66352', 'qy': '0.67962', 'qcv': '1128.77809', 'viff': '0.38076', 'mef_ssim': '0.99998', 'ssim_a': '0.81288', 'fmi_edge': '0.83805', 'fmi_dct': '0.29832', 'fmi_w': '0.34133', 'nabf': '0.04509', 'scd': '1.30727', 'sd': '42.29416', 'sf': '0.00000', 'cc': '0.73862'}, 'result': 'evalution error'}, 'submitId': '2201061610253671'}
2022-01-13 21:59:41,868 - ./server.py[line:96] - INFO: {"timestamp":1642082381862,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 2169] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-13 21:59:41,868 - ./server.py[line:60] - INFO: start evaluation submitId 2201121827087061
2022-01-13 21:59:41,873 - ./server.py[line:95] - INFO: {'evaluateMap': {'mfifb-001': {'qmi': '1.39999', 'qte': '0.42627', 'qncie': '0.86065', 'qg': '0.00699', 'qm': '0.19025', 'qsf': '-0.99611', 'qp': '0.93038', 'qs': '0.00504', 'qc': '0.02425', 'qy': '0.00008', 'qcv': '2.13122', 'viff': '0.00003', 'mef_ssim': '0.53096', 'ssim_a': '0.00486', 'fmi_edge': '0.95133', 'fmi_dct': '0.60677', 'fmi_w': '0.86967', 'nabf': '0.00000', 'scd': '-1.94798', 'sd': '84.25177', 'sf': '0.00000', 'cc': '0.98877'}, 'mfifb-002': {'qmi': '0.69267', 'qte': '0.35993', 'qncie': '0.81995', 'qg': '0.56097', 'qm': '2.93379', 'qsf': '-0.07839', 'qp': '0.78090', 'qs': '0.99962', 'qc': '0.80359', 'qy': '0.86778', 'qcv': '46.73780', 'viff': '0.74330', 'mef_ssim': '0.99999', 'ssim_a': '0.85629', 'fmi_edge': '0.89542', 'fmi_dct': '0.29471', 'fmi_w': '0.37491', 'nabf': '0.10159', 'scd': '-0.12021', 'sd': '100.52789', 'sf': '0.00000', 'cc': '0.97639'}, 'mfifb-003': {'qmi': '1.17840', 'qte': '0.43887', 'qncie': '0.84583', 'qg': '0.00605', 'qm': '0.21958', 'qsf': '-0.99619', 'qp': '0.88293', 'qs': '0.00633', 'qc': '0.04676', 'qy': '0.00009', 'qcv': '4.68667', 'viff': '0.00002', 'mef_ssim': '0.59700', 'ssim_a': '0.00641', 'fmi_edge': '0.95365', 'fmi_dct': '0.59219', 'fmi_w': '0.70451', 'nabf': '0.00000', 'scd': '-1.97426', 'sd': '116.11811', 'sf': '0.00000', 'cc': '0.99496'}, 'mfifb-004': {'qmi': '0.68010', 'qte': '0.34865', 'qncie': '0.82045', 'qg': '0.49059', 'qm': '2.92103', 'qsf': '-0.04096', 'qp': '0.71150', 'qs': '0.99973', 'qc': '0.73384', 'qy': '0.80298', 'qcv': '100.41085', 'viff': '0.78161', 'mef_ssim': '0.99999', 'ssim_a': '0.85033', 'fmi_edge': '0.90106', 'fmi_dct': '0.31521', 'fmi_w': '0.28963', 'nabf': '0.14189', 'scd': '0.18684', 'sd': '149.75403', 'sf': '0.00000', 'cc': '0.97223'}, 'mfifb-005': {'qmi': '1.46150', 'qte': '0.44403', 'qncie': '0.87290', 'qg': '0.00868', 'qm': '0.19290', 'qsf': '-0.99610', 'qp': '0.92974', 'qs': '0.00403', 'qc': '0.01574', 'qy': '0.00008', 'qcv': '0.80686', 'viff': '0.00003', 'mef_ssim': '0.46432', 'ssim_a': '0.00432', 'fmi_edge': '0.97486', 'fmi_dct': '0.66108', 'fmi_w': '0.80808', 'nabf': '0.00000', 'scd': '-1.97408', 'sd': '98.00311', 'sf': '12.56981', 'cc': '0.99418'}, 'result': 'evalution error'}, 'submitId': '2201121806384081'}
2022-01-13 21:59:41,873 - ./server.py[line:96] - INFO: {"timestamp":1642082381853,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 2174] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-13 21:59:41,873 - ./server.py[line:60] - INFO: start evaluation submitId 2201121910400821
2022-01-13 21:59:41,878 - ./server.py[line:95] - INFO: {'evaluateMap': {'vifb-001': {'qmi': '0.78563', 'qte': '0.47299', 'qncie': '0.82737', 'qg': '0.64336', 'qm': '2.98586', 'qsf': '0.02889', 'qp': '0.29853', 'qs': '0.99895', 'qc': '0.51786', 'qy': '0.82912', 'qcv': '1868.27259', 'viff': '0.83418', 'mef_ssim': '1.00000', 'ssim_a': '0.80035', 'fmi_edge': '0.96422', 'fmi_dct': '0.43498', 'fmi_w': '0.43681', 'nabf': '0.25195', 'scd': '0.63555', 'sd': '115.03711', 'sf': '0.00000', 'cc': '0.58148'}, 'vifb-002': {'qmi': '0.39388', 'qte': '0.34174', 'qncie': '0.80696', 'qg': '0.42039', 'qm': '2.95517', 'qsf': '0.04529', 'qp': '0.22791', 'qs': '0.99665', 'qc': '0.48035', 'qy': '0.62921', 'qcv': '1102.40565', 'viff': '0.59474', 'mef_ssim': '0.99998', 'ssim_a': '0.68091', 'fmi_edge': '0.92231', 'fmi_dct': '0.26455', 'fmi_w': '0.34284', 'nabf': '0.37912', 'scd': '-0.09981', 'sd': '83.60962', 'sf': '0.00000', 'cc': '0.60237'}, 'vifb-003': {'qmi': '0.67703', 'qte': '0.40154', 'qncie': '0.81701', 'qg': '0.61205', 'qm': '2.96945', 'qsf': '0.00359', 'qp': '0.46311', 'qs': '0.99856', 'qc': '0.54351', 'qy': '0.87522', 'qcv': '3698.96541', 'viff': '0.71581', 'mef_ssim': '0.99999', 'ssim_a': '0.73336', 'fmi_edge': '0.88250', 'fmi_dct': '0.46723', 'fmi_w': '0.47927', 'nabf': '0.20513', 'scd': '1.16403', 'sd': '93.85853', 'sf': '1.00000', 'cc': '0.50426'}, 'vifb-004': {'qmi': '0.86833', 'qte': '0.47631', 'qncie': '0.83653', 'qg': '0.78128', 'qm': '2.97308', 'qsf': '-0.00997', 'qp': '0.45984', 'qs': '0.99962', 'qc': '0.55691', 'qy': '0.94830', 'qcv': '41.57030', 'viff': '0.96026', 'mef_ssim': '1.00000', 'ssim_a': '0.83778', 'fmi_edge': '0.96046', 'fmi_dct': '0.46656', 'fmi_w': '0.51640', 'nabf': '0.15729', 'scd': '0.90641', 'sd': '88.43988', 'sf': '0.00000', 'cc': '0.52671'}, 'vifb-005': {'qmi': '0.39398', 'qte': '0.31482', 'qncie': '0.80661', 'qg': '0.42943', 'qm': '2.90266', 'qsf': '-0.09399', 'qp': '0.44176', 'qs': '0.99855', 'qc': '0.65172', 'qy': '0.69262', 'qcv': '1848.98017', 'viff': '0.39790', 'mef_ssim': '0.99998', 'ssim_a': '0.74163', 'fmi_edge': '0.85719', 'fmi_dct': '0.34136', 'fmi_w': '0.36644', 'nabf': '0.32556', 'scd': '0.85345', 'sd': '59.03066', 'sf': '0.00000', 'cc': '0.53250'}, 'result': 'evalution error'}, 'submitId': '2201061614064031'}
2022-01-13 21:59:41,879 - ./server.py[line:96] - INFO: {"timestamp":1642082381852,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 2170] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-13 21:59:41,879 - ./server.py[line:60] - INFO: start evaluation submitId 2201121927168731
2022-01-13 21:59:41,879 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 63, in evaluation
    data_conf = config['task'][task]['dataset'][dataset]
KeyError: 'mefb'

2022-01-13 21:59:41,879 - ./server.py[line:86] - INFO: start call back submitId 2201121927168731
2022-01-13 21:59:41,905 - ./server.py[line:95] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2201121927168731'}
2022-01-13 21:59:41,906 - ./server.py[line:96] - INFO: {"timestamp":1642082381902,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-13 22:00:14,842 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 75, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 102, in get_evaluation
    fused_mat=fused_mat)
  File "/test/evalutaor.py", line 120, in evaluate_by_qmi
    value = self.matlab_engine.metricMI(kwargs['img1_mat'], kwargs['img2_mat'], kwargs['fused_mat'], 1)  # sw = 1 revised MI
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 71, in __call__
    _stderr, feval=True).result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/fevalfuture.py", line 82, in result
    self._result = pythonengine.getFEvalResult(self._future,self._nargout, None, out=self._out, err=self._err)
matlab.engine.EngineError: MATLAB function cannot be evaluated

2022-01-13 22:00:14,842 - ./server.py[line:86] - INFO: start call back submitId 2201121808060081
2022-01-13 22:00:14,966 - ./server.py[line:95] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2201121808060081'}
2022-01-13 22:00:14,966 - ./server.py[line:96] - INFO: {"timestamp":1642082414954,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-13 22:00:17,394 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 75, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 102, in get_evaluation
    fused_mat=fused_mat)
  File "/test/evalutaor.py", line 120, in evaluate_by_qmi
    value = self.matlab_engine.metricMI(kwargs['img1_mat'], kwargs['img2_mat'], kwargs['fused_mat'], 1)  # sw = 1 revised MI
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 71, in __call__
    _stderr, feval=True).result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/fevalfuture.py", line 82, in result
    self._result = pythonengine.getFEvalResult(self._future,self._nargout, None, out=self._out, err=self._err)
matlab.engine.EngineError: MATLAB function cannot be evaluated

2022-01-13 22:00:17,396 - ./server.py[line:86] - INFO: start call back submitId 2201121910400821
2022-01-13 22:00:17,437 - ./server.py[line:95] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2201121910400821'}
2022-01-13 22:00:17,437 - ./server.py[line:96] - INFO: {"timestamp":1642082417430,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-13 22:00:18,230 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 75, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 102, in get_evaluation
    fused_mat=fused_mat)
  File "/test/evalutaor.py", line 120, in evaluate_by_qmi
    value = self.matlab_engine.metricMI(kwargs['img1_mat'], kwargs['img2_mat'], kwargs['fused_mat'], 1)  # sw = 1 revised MI
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 71, in __call__
    _stderr, feval=True).result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/fevalfuture.py", line 82, in result
    self._result = pythonengine.getFEvalResult(self._future,self._nargout, None, out=self._out, err=self._err)
matlab.engine.EngineError: MATLAB function cannot be evaluated

2022-01-13 22:00:18,230 - ./server.py[line:86] - INFO: start call back submitId 2201121827087061
2022-01-13 22:00:18,261 - ./server.py[line:95] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2201121827087061'}
2022-01-13 22:00:18,261 - ./server.py[line:96] - INFO: {"timestamp":1642082418251,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-13 22:00:18,400 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 75, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 102, in get_evaluation
    fused_mat=fused_mat)
  File "/test/evalutaor.py", line 120, in evaluate_by_qmi
    value = self.matlab_engine.metricMI(kwargs['img1_mat'], kwargs['img2_mat'], kwargs['fused_mat'], 1)  # sw = 1 revised MI
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 71, in __call__
    _stderr, feval=True).result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/fevalfuture.py", line 82, in result
    self._result = pythonengine.getFEvalResult(self._future,self._nargout, None, out=self._out, err=self._err)
matlab.engine.EngineError: MATLAB function cannot be evaluated

2022-01-13 22:00:18,400 - ./server.py[line:86] - INFO: start call back submitId 2201121809390721
2022-01-13 22:00:18,418 - ./server.py[line:95] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2201121809390721'}
2022-01-13 22:00:18,419 - ./server.py[line:96] - INFO: {"timestamp":1642082418414,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-01-14 00:04:36,667 - ./server.py[line:60] - INFO: start evaluation submitId 2201121805519561
2022-01-14 00:04:39,565 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 75, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 102, in get_evaluation
    fused_mat=fused_mat)
  File "/test/evalutaor.py", line 120, in evaluate_by_qmi
    value = self.matlab_engine.metricMI(kwargs['img1_mat'], kwargs['img2_mat'], kwargs['fused_mat'], 1)  # sw = 1 revised MI
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/matlabengine.py", line 71, in __call__
    _stderr, feval=True).result()
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/futureresult.py", line 67, in result
    return self.__future.result(timeout)
  File "/test/liantiao/lib/python3.6/site-packages/matlab/engine/fevalfuture.py", line 82, in result
    self._result = pythonengine.getFEvalResult(self._future,self._nargout, None, out=self._out, err=self._err)
matlab.engine.EngineError: MATLAB function cannot be evaluated

2022-01-14 00:04:39,566 - ./server.py[line:86] - INFO: start call back submitId 2201121805519561
2022-01-14 00:04:39,585 - ./server.py[line:95] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2201121805519561'}
2022-01-14 00:04:39,586 - ./server.py[line:96] - INFO: {"timestamp":1642089879581,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
./server.py:21: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(f)
Traceback (most recent call last):
  File "./server.py", line 104, in <module>
    app.run(host='0.0.0.0', port=12000, debug = False)
  File "/test/liantiao/lib/python3.6/site-packages/flask/app.py", line 922, in run
    run_simple(t.cast(str, host), port, self, **options)
  File "/test/liantiao/lib/python3.6/site-packages/werkzeug/serving.py", line 1008, in run_simple
    inner()
  File "/test/liantiao/lib/python3.6/site-packages/werkzeug/serving.py", line 957, in inner
    fd=fd,
  File "/test/liantiao/lib/python3.6/site-packages/werkzeug/serving.py", line 781, in make_server
    host, port, app, request_handler, passthrough_errors, ssl_context, fd=fd
  File "/test/liantiao/lib/python3.6/site-packages/werkzeug/serving.py", line 686, in __init__
    super().__init__(server_address, handler)  # type: ignore
  File "/Python-3.6.8/Lib/socketserver.py", line 456, in __init__
    self.server_bind()
  File "/Python-3.6.8/Lib/http/server.py", line 136, in server_bind
    socketserver.TCPServer.server_bind(self)
  File "/Python-3.6.8/Lib/socketserver.py", line 470, in server_bind
    self.socket.bind(self.server_address)
OSError: [Errno 98] Address already in use
2022-01-14 09:19:48,253 - ./server.py[line:60] - INFO: start evaluation submitId 2201121927168731
2022-01-14 09:19:48,253 - ./server.py[line:80] - ERROR: Traceback (most recent call last):
  File "./server.py", line 63, in evaluation
    data_conf = config['task'][task]['dataset'][dataset]
KeyError: 'mefb'

2022-01-14 09:19:48,254 - ./server.py[line:86] - INFO: start call back submitId 2201121927168731
2022-01-14 09:19:48,297 - ./server.py[line:95] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2201121927168731'}
2022-01-14 09:19:48,297 - ./server.py[line:96] - INFO: {"timestamp":1642123188269,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
./server.py:21: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(f)
2022-01-25 22:59:30,335 - ./server.py[line:60] - INFO: start evaluation submitId 2201252259292211
2022-01-25 22:59:30,337 - ./server.py[line:81] - ERROR: Traceback (most recent call last):
  File "./server.py", line 63, in evaluation
    data_conf = config['task'][task]['dataset'][dataset]
KeyError: '0125\u6570\u636e\u96c6'

2022-01-25 22:59:30,337 - ./server.py[line:88] - INFO: start call back submitId 2201252259292211
2022-01-25 22:59:30,534 - ./server.py[line:97] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2201252259292211'}
2022-01-25 22:59:30,534 - ./server.py[line:98] - INFO: {"timestamp":1643122770509,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-02-07 11:39:01,979 - ./server.py[line:60] - INFO: start evaluation submitId 2202071139011871
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          /test/evalutaor.py:315: UserWarning: DEPRECATED: skimage.measure.compare_ssim has been moved to skimage.metrics.structural_similarity. It will be removed from skimage.measure in version 0.18.
  im1_f_ssim = measure.compare_ssim(kwargs['img1'],kwargs['fused'])
/test/evalutaor.py:316: UserWarning: DEPRECATED: skimage.measure.compare_ssim has been moved to skimage.metrics.structural_similarity. It will be removed from skimage.measure in version 0.18.
  im2_f_ssim = measure.compare_ssim(kwargs['img2'], kwargs['fused'])
2022-02-07 11:48:22,485 - ./server.py[line:88] - INFO: start call back submitId 2202071139011871
2022-02-07 11:50:31,089 - ./server.py[line:97] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.87831', 'qte': '0.37509', 'qncie': '0.82471', 'qg': '0.49567', 'qsf': '-0.09175', 'qp': '0.63745', 'qs': '0.99992', 'qc': '0.76832', 'qy': '0.97255', 'qcv': '27.53435', 'viff': '0.90918', 'mef_ssim': '0.99999', 'ssim_a': '0.92514', 'fmi_edge': '0.94028', 'fmi_dct': '0.50310', 'fmi_w': '0.51690', 'nabf': '0.05125', 'scd': '0.43070', 'sd': '79.61921', 'sf': '0.00000', 'cc': '0.95933'}, 'lytro-002': {'qmi': '1.02132', 'qte': '0.43061', 'qncie': '0.83678', 'qg': '0.57778', 'qsf': '-0.24542', 'qp': '0.83519', 'qs': '0.99993', 'qc': '0.81777', 'qy': '0.97093', 'qcv': '26.96359', 'viff': '0.83547', 'mef_ssim': '0.99998', 'ssim_a': '0.92705', 'fmi_edge': '0.88982', 'fmi_dct': '0.51869', 'fmi_w': '0.54697', 'nabf': '0.06628', 'scd': '0.02825', 'sd': '98.42860', 'sf': '0.00000', 'cc': '0.98446'}, 'lytro-003': {'qmi': '0.76611', 'qte': '0.35945', 'qncie': '0.82271', 'qg': '0.57639', 'qsf': '-0.41743', 'qp': '0.67779', 'qs': '0.99961', 'qc': '0.80325', 'qy': '0.96737', 'qcv': '841.50107', 'viff': '0.58603', 'mef_ssim': '0.99997', 'ssim_a': '0.88151', 'fmi_edge': '0.88672', 'fmi_dct': '0.48573', 'fmi_w': '0.51269', 'nabf': '0.08092', 'scd': '-0.02446', 'sd': '95.48906', 'sf': '0.00000', 'cc': '0.95583'}, 'lytro-004': {'qmi': '1.01903', 'qte': '0.41690', 'qncie': '0.83816', 'qg': '0.62451', 'qsf': '-0.46906', 'qp': '0.78986', 'qs': '0.99981', 'qc': '0.84276', 'qy': '0.96578', 'qcv': '202.89301', 'viff': '0.63673', 'mef_ssim': '0.99997', 'ssim_a': '0.92607', 'fmi_edge': '0.91912', 'fmi_dct': '0.50742', 'fmi_w': '0.52648', 'nabf': '0.08160', 'scd': '-0.21634', 'sd': '117.92096', 'sf': '0.00000', 'cc': '0.98213'}}, 'submitId': '2202071139011871'}
2022-02-07 11:50:31,089 - ./server.py[line:98] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-02-08 11:08:58,931 - ./server.py[line:60] - INFO: start evaluation submitId 2202081108562261
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          2022-02-08 11:54:05,697 - ./server.py[line:88] - INFO: start call back submitId 2202081108562261
2022-02-08 11:56:16,582 - ./server.py[line:97] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.75491', 'qte': '0.34098', 'qncie': '0.81693', 'qg': '0.65694', 'qsf': '-0.04504', 'qp': '0.74827', 'qs': '0.99988', 'qc': '0.79329', 'qy': '0.95869', 'qcv': '22.30692', 'viff': '0.86300', 'mef_ssim': '1.00000', 'ssim_a': '0.92633', 'fmi_edge': '0.93732', 'fmi_dct': '0.36948', 'fmi_w': '0.46009', 'nabf': '0.09965', 'scd': '0.31950', 'sd': '77.14777', 'sf': '0.00000', 'cc': '0.96127'}, 'lytro-002': {'qmi': '0.77826', 'qte': '0.36789', 'qncie': '0.82229', 'qg': '0.66662', 'qsf': '-0.03920', 'qp': '0.84899', 'qs': '0.99982', 'qc': '0.82144', 'qy': '0.94862', 'qcv': '28.56273', 'viff': '0.88394', 'mef_ssim': '1.00000', 'ssim_a': '0.92343', 'fmi_edge': '0.87093', 'fmi_dct': '0.40563', 'fmi_w': '0.50340', 'nabf': '0.10305', 'scd': '0.63195', 'sd': '105.79073', 'sf': '0.00000', 'cc': '0.97550'}, 'lytro-003': {'qmi': '0.65332', 'qte': '0.32144', 'qncie': '0.81628', 'qg': '0.63628', 'qsf': '-0.04456', 'qp': '0.78321', 'qs': '0.99981', 'qc': '0.79840', 'qy': '0.93651', 'qcv': '110.15445', 'viff': '0.83968', 'mef_ssim': '1.00000', 'ssim_a': '0.88556', 'fmi_edge': '0.87842', 'fmi_dct': '0.37417', 'fmi_w': '0.44575', 'nabf': '0.09965', 'scd': '0.63231', 'sd': '102.43434', 'sf': '0.00000', 'cc': '0.96501'}, 'lytro-004': {'qmi': '0.82160', 'qte': '0.37558', 'qncie': '0.82545', 'qg': '0.65229', 'qsf': '-0.03748', 'qp': '0.80625', 'qs': '0.99986', 'qc': '0.84154', 'qy': '0.94189', 'qcv': '36.35671', 'viff': '0.92207', 'mef_ssim': '1.00000', 'ssim_a': '0.92410', 'fmi_edge': '0.91408', 'fmi_dct': '0.40584', 'fmi_w': '0.48016', 'nabf': '0.10358', 'scd': '0.48223', 'sd': '124.66314', 'sf': '0.00000', 'cc': '0.98272'}, 'lytro-005': {'qmi': '0.82724', 'qte': '0.37539', 'qncie': '0.82606', 'qg': '0.64799', 'qsf': '-0.09032', 'qp': '0.78875', 'qs': '0.99987', 'qc': '0.75627', 'qy': '0.95295', 'qcv': '31.78665', 'viff': '0.85171', 'mef_ssim': '1.00000', 'ssim_a': '0.90791', 'fmi_edge': '0.88889', 'fmi_dct': '0.41326', 'fmi_w': '0.49685', 'nabf': '0.10340', 'scd': '0.37458', 'sd': '125.88742', 'sf': '0.00000', 'cc': '0.97901'}, 'lytro-006': {'qmi': '0.81595', 'qte': '0.37701', 'qncie': '0.82487', 'qg': '0.64334', 'qsf': '-0.04329', 'qp': '0.81805', 'qs': '0.99987', 'qc': '0.80254', 'qy': '0.93778', 'qcv': '31.98747', 'viff': '0.85610', 'mef_ssim': '1.00000', 'ssim_a': '0.88488', 'fmi_edge': '0.89707', 'fmi_dct': '0.38890', 'fmi_w': '0.47671', 'nabf': '0.11577', 'scd': '0.54194', 'sd': '142.04130', 'sf': '0.00000', 'cc': '0.98267'}, 'lytro-007': {'qmi': '0.75937', 'qte': '0.35982', 'qncie': '0.82199', 'qg': '0.62321', 'qsf': '-0.06049', 'qp': '0.84994', 'qs': '0.99991', 'qc': '0.77761', 'qy': '0.94562', 'qcv': '21.81974', 'viff': '0.87068', 'mef_ssim': '1.00000', 'ssim_a': '0.90423', 'fmi_edge': '0.88330', 'fmi_dct': '0.37618', 'fmi_w': '0.47879', 'nabf': '0.10107', 'scd': '0.31551', 'sd': '117.63313', 'sf': '0.00000', 'cc': '0.98255'}, 'lytro-008': {'qmi': '0.80248', 'qte': '0.37715', 'qncie': '0.82411', 'qg': '0.73112', 'qsf': '-0.03765', 'qp': '0.88931', 'qs': '0.99961', 'qc': '0.88831', 'qy': '0.96235', 'qcv': '25.81280', 'viff': '1.03034', 'mef_ssim': '1.00000', 'ssim_a': '0.92297', 'fmi_edge': '0.92255', 'fmi_dct': '0.45693', 'fmi_w': '0.58887', 'nabf': '0.08809', 'scd': '0.91126', 'sd': '122.11392', 'sf': '0.00000', 'cc': '0.97868'}, 'lytro-009': {'qmi': '0.70679', 'qte': '0.34373', 'qncie': '0.81757', 'qg': '0.70300', 'qsf': '-0.03166', 'qp': '0.77793', 'qs': '0.99973', 'qc': '0.76134', 'qy': '0.95413', 'qcv': '53.76479', 'viff': '0.87425', 'mef_ssim': '1.00000', 'ssim_a': '0.80817', 'fmi_edge': '0.89127', 'fmi_dct': '0.38404', 'fmi_w': '0.49182', 'nabf': '0.13369', 'scd': '0.93797', 'sd': '132.92656', 'sf': '0.00000', 'cc': '0.94409'}, 'lytro-010': {'qmi': '0.72675', 'qte': '0.32751', 'qncie': '0.81893', 'qg': '0.73682', 'qsf': '-0.02843', 'qp': '0.76663', 'qs': '0.99994', 'qc': '0.90098', 'qy': '0.99092', 'qcv': '30.76470', 'viff': '0.93534', 'mef_ssim': '1.00000', 'ssim_a': '0.85316', 'fmi_edge': '0.84604', 'fmi_dct': '0.41793', 'fmi_w': '0.58720', 'nabf': '0.12014', 'scd': '0.74347', 'sd': '105.60859', 'sf': '0.00000', 'cc': '0.95789'}, 'lytro-011': {'qmi': '0.79722', 'qte': '0.36504', 'qncie': '0.82448', 'qg': '0.67205', 'qsf': '-0.02494', 'qp': '0.81890', 'qs': '0.99971', 'qc': '0.73809', 'qy': '0.92805', 'qcv': '26.38739', 'viff': '0.86129', 'mef_ssim': '1.00000', 'ssim_a': '0.86112', 'fmi_edge': '0.89142', 'fmi_dct': '0.44467', 'fmi_w': '0.51734', 'nabf': '0.11629', 'scd': '-0.02808', 'sd': '136.27872', 'sf': '3.60555', 'cc': '0.95505'}, 'lytro-012': {'qmi': '0.81915', 'qte': '0.37373', 'qncie': '0.82383', 'qg': '0.67072', 'qsf': '-0.02765', 'qp': '0.85223', 'qs': '0.99974', 'qc': '0.75313', 'qy': '0.95169', 'qcv': '33.07579', 'viff': '0.97220', 'mef_ssim': '1.00000', 'ssim_a': '0.87353', 'fmi_edge': '0.89175', 'fmi_dct': '0.40485', 'fmi_w': '0.53518', 'nabf': '0.12828', 'scd': '0.86911', 'sd': '117.46344', 'sf': '0.00000', 'cc': '0.96175'}, 'lytro-013': {'qmi': '0.53700', 'qte': '0.28441', 'qncie': '0.81140', 'qg': '0.74059', 'qsf': '-0.02368', 'qp': '0.78276', 'qs': '0.99985', 'qc': '0.72652', 'qy': '0.97023', 'qcv': '46.67037', 'viff': '0.86123', 'mef_ssim': '1.00000', 'ssim_a': '0.73252', 'fmi_edge': '0.85219', 'fmi_dct': '0.41072', 'fmi_w': '0.49338', 'nabf': '0.13882', 'scd': '0.61518', 'sd': '115.88294', 'sf': '0.00000', 'cc': '0.93312'}, 'lytro-014': {'qmi': '0.73104', 'qte': '0.33120', 'qncie': '0.82027', 'qg': '0.68070', 'qsf': '-0.03265', 'qp': '0.78221', 'qs': '0.99983', 'qc': '0.74636', 'qy': '0.94946', 'qcv': '35.55604', 'viff': '0.80635', 'mef_ssim': '1.00000', 'ssim_a': '0.85780', 'fmi_edge': '0.87752', 'fmi_dct': '0.39108', 'fmi_w': '0.50132', 'nabf': '0.13062', 'scd': '0.27284', 'sd': '116.42134', 'sf': '0.00000', 'cc': '0.96225'}, 'lytro-015': {'qmi': '1.04713', 'qte': '0.42882', 'qncie': '0.84030', 'qg': '0.72139', 'qsf': '-0.03951', 'qp': '0.88489', 'qs': '0.99994', 'qc': '0.86364', 'qy': '0.96055', 'qcv': '7.70212', 'viff': '0.99446', 'mef_ssim': '1.00000', 'ssim_a': '0.95366', 'fmi_edge': '0.94616', 'fmi_dct': '0.48442', 'fmi_w': '0.58733', 'nabf': '0.09884', 'scd': '0.55218', 'sd': '146.88083', 'sf': '0.00000', 'cc': '0.99589'}, 'lytro-016': {'qmi': '0.63564', 'qte': '0.29998', 'qncie': '0.81826', 'qg': '0.46256', 'qsf': '-0.04399', 'qp': '0.52833', 'qs': '0.99972', 'qc': '0.75288', 'qy': '0.79654', 'qcv': '55.84095', 'viff': '0.94001', 'mef_ssim': '1.00000', 'ssim_a': '0.93299', 'fmi_edge': '0.90523', 'fmi_dct': '0.26837', 'fmi_w': '0.27405', 'nabf': '0.13617', 'scd': '-0.16750', 'sd': '85.96776', 'sf': '0.00000', 'cc': '0.94591'}, 'lytro-017': {'qmi': '0.59633', 'qte': '0.30628', 'qncie': '0.81320', 'qg': '0.64517', 'qsf': '-0.03560', 'qp': '0.79413', 'qs': '0.99985', 'qc': '0.75657', 'qy': '0.94492', 'qcv': '53.32129', 'viff': '0.84897', 'mef_ssim': '1.00000', 'ssim_a': '0.85225', 'fmi_edge': '0.88923', 'fmi_dct': '0.41874', 'fmi_w': '0.43509', 'nabf': '0.08886', 'scd': '0.56618', 'sd': '94.28048', 'sf': '0.00000', 'cc': '0.94193'}, 'lytro-018': {'qmi': '0.94861', 'qte': '0.39170', 'qncie': '0.83129', 'qg': '0.67259', 'qsf': '-0.06648', 'qp': '0.80019', 'qs': '0.99989', 'qc': '0.81457', 'qy': '0.90903', 'qcv': '11.44184', 'viff': '0.90927', 'mef_ssim': '1.00000', 'ssim_a': '0.95735', 'fmi_edge': '0.94268', 'fmi_dct': '0.36785', 'fmi_w': '0.51069', 'nabf': '0.11006', 'scd': '-0.13455', 'sd': '130.21913', 'sf': '1.00000', 'cc': '0.99106'}, 'lytro-019': {'qmi': '0.81168', 'qte': '0.40471', 'qncie': '0.82111', 'qg': '0.64744', 'qsf': '-0.03934', 'qp': '0.74149', 'qs': '0.99967', 'qc': '0.71762', 'qy': '0.92508', 'qcv': '38.48922', 'viff': '0.85861', 'mef_ssim': '1.00000', 'ssim_a': '0.88285', 'fmi_edge': '0.90711', 'fmi_dct': '0.36611', 'fmi_w': '0.46213', 'nabf': '0.12815', 'scd': '1.02294', 'sd': '131.83724', 'sf': '0.00000', 'cc': '0.96915'}, 'lytro-020': {'qmi': '0.80993', 'qte': '0.36099', 'qncie': '0.82563', 'qg': '0.57967', 'qsf': '-0.08019', 'qp': '0.73000', 'qs': '0.99978', 'qc': '0.75880', 'qy': '0.90755', 'qcv': '28.04937', 'viff': '0.77423', 'mef_ssim': '1.00000', 'ssim_a': '0.91390', 'fmi_edge': '0.92876', 'fmi_dct': '0.36331', 'fmi_w': '0.44824', 'nabf': '0.08431', 'scd': '0.71377', 'sd': '138.65427', 'sf': '2.44949', 'cc': '0.98198'}}, 'submitId': '2202081108562261'}
2022-02-08 11:56:16,583 - ./server.py[line:98] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-02-08 11:56:16,583 - ./server.py[line:60] - INFO: start evaluation submitId 2202081126406831
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          2022-02-08 12:05:16,408 - ./server.py[line:88] - INFO: start call back submitId 2202081126406831
2022-02-08 12:07:24,071 - ./server.py[line:97] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807', 'qsf': '-0.09119', 'qp': '0.63465', 'qs': '0.99985', 'qc': '0.76337', 'qy': '0.97190', 'qcv': '33.66428', 'viff': '0.87328', 'mef_ssim': '0.99999', 'ssim_a': '0.92126', 'fmi_edge': '0.93813', 'fmi_dct': '0.50923', 'fmi_w': '0.53852', 'nabf': '0.05364', 'scd': '0.08517', 'sd': '77.96719', 'sf': '0.00000', 'cc': '0.95716'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666', 'qsf': '-0.25349', 'qp': '0.79248', 'qs': '0.99977', 'qc': '0.81215', 'qy': '0.96282', 'qcv': '50.12677', 'viff': '0.74914', 'mef_ssim': '0.99998', 'ssim_a': '0.92148', 'fmi_edge': '0.88380', 'fmi_dct': '0.51491', 'fmi_w': '0.55421', 'nabf': '0.06566', 'scd': '0.49122', 'sd': '104.33935', 'sf': '0.00000', 'cc': '0.97299'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701', 'qsf': '-0.41214', 'qp': '0.67670', 'qs': '0.99961', 'qc': '0.80240', 'qy': '0.96698', 'qcv': '889.97750', 'viff': '0.58902', 'mef_ssim': '0.99997', 'ssim_a': '0.87866', 'fmi_edge': '0.88663', 'fmi_dct': '0.50458', 'fmi_w': '0.54057', 'nabf': '0.09811', 'scd': '0.39841', 'sd': '100.79161', 'sf': '0.00000', 'cc': '0.95410'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215', 'qsf': '-0.46324', 'qp': '0.77785', 'qs': '0.99973', 'qc': '0.84002', 'qy': '0.96272', 'qcv': '235.93068', 'viff': '0.66578', 'mef_ssim': '0.99997', 'ssim_a': '0.92036', 'fmi_edge': '0.91719', 'fmi_dct': '0.51916', 'fmi_w': '0.54778', 'nabf': '0.09229', 'scd': '0.26648', 'sd': '122.60037', 'sf': '0.00000', 'cc': '0.97811'}}, 'submitId': '2202081126406831'}
2022-02-08 12:07:24,071 - ./server.py[line:98] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-02-20 22:17:03,385 - ./server.py[line:60] - INFO: start evaluation submitId 2202202217106471
2022-02-20 22:17:03,386 - ./server.py[line:81] - ERROR: Traceback (most recent call last):
  File "./server.py", line 63, in evaluation
    data_conf = config['task'][task]['dataset'][dataset]
KeyError: '20\u6d4b\u8bd5'

2022-02-20 22:17:03,386 - ./server.py[line:88] - INFO: start call back submitId 2202202217106471
2022-02-20 22:17:03,501 - ./server.py[line:97] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2202202217106471'}
2022-02-20 22:17:03,501 - ./server.py[line:98] - INFO: {"timestamp":1645366623495,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-02-23 15:45:28,814 - ./server.py[line:60] - INFO: start evaluation submitId 2202231545281751
2022-02-23 15:45:29,144 - ./server.py[line:81] - ERROR: Traceback (most recent call last):
  File "./server.py", line 76, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 81, in get_evaluation
    fused = rgb2gray(fused)
  File "/test/liantiao/lib/python3.6/site-packages/skimage/color/colorconv.py", line 793, in rgb2gray
    if rgb.ndim == 2:
AttributeError: 'NoneType' object has no attribute 'ndim'

2022-02-23 15:45:29,144 - ./server.py[line:88] - INFO: start call back submitId 2202231545281751
2022-02-23 15:45:29,253 - ./server.py[line:97] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2202231545281751'}
2022-02-23 15:45:29,254 - ./server.py[line:98] - INFO: {"timestamp":1645602329249,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-02-23 16:26:20,141 - ./server.py[line:60] - INFO: start evaluation submitId 2111221705508171
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          2022-02-23 16:36:10,512 - ./server.py[line:88] - INFO: start call back submitId 2111221705508171
2022-02-23 16:36:10,634 - ./server.py[line:97] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807', 'qsf': '-0.09119', 'qp': '0.63465', 'qs': '0.99985', 'qc': '0.76337', 'qy': '0.97190', 'qcv': '33.66428', 'viff': '0.87328', 'mef_ssim': '0.99999', 'ssim_a': '0.92126', 'fmi_edge': '0.93813', 'fmi_dct': '0.50923', 'fmi_w': '0.53852', 'nabf': '0.05364', 'scd': '0.08517', 'sd': '77.96719', 'sf': '0.00000', 'cc': '0.95716'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666', 'qsf': '-0.25349', 'qp': '0.79248', 'qs': '0.99977', 'qc': '0.81215', 'qy': '0.96282', 'qcv': '50.12677', 'viff': '0.74914', 'mef_ssim': '0.99998', 'ssim_a': '0.92148', 'fmi_edge': '0.88380', 'fmi_dct': '0.51491', 'fmi_w': '0.55421', 'nabf': '0.06566', 'scd': '0.49122', 'sd': '104.33935', 'sf': '0.00000', 'cc': '0.97299'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701', 'qsf': '-0.41214', 'qp': '0.67670', 'qs': '0.99961', 'qc': '0.80240', 'qy': '0.96698', 'qcv': '889.97750', 'viff': '0.58902', 'mef_ssim': '0.99997', 'ssim_a': '0.87866', 'fmi_edge': '0.88663', 'fmi_dct': '0.50458', 'fmi_w': '0.54057', 'nabf': '0.09811', 'scd': '0.39841', 'sd': '100.79161', 'sf': '0.00000', 'cc': '0.95410'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215', 'qsf': '-0.46324', 'qp': '0.77785', 'qs': '0.99973', 'qc': '0.84002', 'qy': '0.96272', 'qcv': '235.93068', 'viff': '0.66578', 'mef_ssim': '0.99997', 'ssim_a': '0.92036', 'fmi_edge': '0.91719', 'fmi_dct': '0.51916', 'fmi_w': '0.54778', 'nabf': '0.09229', 'scd': '0.26648', 'sd': '122.60037', 'sf': '0.00000', 'cc': '0.97811'}}, 'submitId': '2111221705508171'}
2022-02-23 16:36:10,634 - ./server.py[line:98] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-02-23 16:36:10,635 - ./server.py[line:60] - INFO: start evaluation submitId 2202231545281751
2022-02-23 16:36:10,703 - ./server.py[line:81] - ERROR: Traceback (most recent call last):
  File "./server.py", line 76, in evaluation
    result[img_name] = eva.get_evaluation(imgA, imgB, fused, metrics=config['task'][task]['metrics'])
  File "/test/evalutaor.py", line 81, in get_evaluation
    fused = rgb2gray(fused)
  File "/test/liantiao/lib/python3.6/site-packages/skimage/color/colorconv.py", line 793, in rgb2gray
    if rgb.ndim == 2:
AttributeError: 'NoneType' object has no attribute 'ndim'

2022-02-23 16:36:10,703 - ./server.py[line:88] - INFO: start call back submitId 2202231545281751
2022-02-23 16:36:10,726 - ./server.py[line:97] - INFO: {'evaluateMap': {'result': 'evalution error'}, 'submitId': '2202231545281751'}
2022-02-23 16:36:10,726 - ./server.py[line:98] - INFO: {"timestamp":1645605370722,"status":400,"error":"Bad Request","message":"JSON parse error: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('evalution error')\n at [Source: (PushbackInputStream); line: 1, column: 28] (through reference chain: com.young.imagefusion.evaluate.model.EvaluateResult[\"evaluateMap\"]->java.util.LinkedHashMap[\"result\"])","path":"/fusion/c/submit/getEvaluateResultCallBack"}
2022-02-23 16:36:10,726 - ./server.py[line:60] - INFO: start evaluation submitId 2202231634160671
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          2022-02-23 16:44:48,017 - ./server.py[line:88] - INFO: start call back submitId 2202231634160671
2022-02-23 16:44:57,623 - ./server.py[line:97] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807', 'qsf': '-0.09119', 'qp': '0.63465', 'qs': '0.99985', 'qc': '0.76337', 'qy': '0.97190', 'qcv': '33.66428', 'viff': '0.87328', 'mef_ssim': '0.99999', 'ssim_a': '0.92126', 'fmi_edge': '0.93813', 'fmi_dct': '0.50923', 'fmi_w': '0.53852', 'nabf': '0.05364', 'scd': '0.08517', 'sd': '77.96719', 'sf': '0.00000', 'cc': '0.95716'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666', 'qsf': '-0.25349', 'qp': '0.79248', 'qs': '0.99977', 'qc': '0.81215', 'qy': '0.96282', 'qcv': '50.12677', 'viff': '0.74914', 'mef_ssim': '0.99998', 'ssim_a': '0.92148', 'fmi_edge': '0.88380', 'fmi_dct': '0.51491', 'fmi_w': '0.55421', 'nabf': '0.06566', 'scd': '0.49122', 'sd': '104.33935', 'sf': '0.00000', 'cc': '0.97299'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701', 'qsf': '-0.41214', 'qp': '0.67670', 'qs': '0.99961', 'qc': '0.80240', 'qy': '0.96698', 'qcv': '889.97750', 'viff': '0.58902', 'mef_ssim': '0.99997', 'ssim_a': '0.87866', 'fmi_edge': '0.88663', 'fmi_dct': '0.50458', 'fmi_w': '0.54057', 'nabf': '0.09811', 'scd': '0.39841', 'sd': '100.79161', 'sf': '0.00000', 'cc': '0.95410'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215', 'qsf': '-0.46324', 'qp': '0.77785', 'qs': '0.99973', 'qc': '0.84002', 'qy': '0.96272', 'qcv': '235.93068', 'viff': '0.66578', 'mef_ssim': '0.99997', 'ssim_a': '0.92036', 'fmi_edge': '0.91719', 'fmi_dct': '0.51916', 'fmi_w': '0.54778', 'nabf': '0.09229', 'scd': '0.26648', 'sd': '122.60037', 'sf': '0.00000', 'cc': '0.97811'}}, 'submitId': '2202231634160671'}
2022-02-23 16:44:57,623 - ./server.py[line:98] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-02-23 16:44:57,623 - ./server.py[line:60] - INFO: start evaluation submitId 2202231634160671
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          2022-02-23 16:53:58,396 - ./server.py[line:88] - INFO: start call back submitId 2202231634160671
2022-02-23 16:53:58,508 - ./server.py[line:97] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807', 'qsf': '-0.09119', 'qp': '0.63465', 'qs': '0.99985', 'qc': '0.76337', 'qy': '0.97190', 'qcv': '33.66428', 'viff': '0.87328', 'mef_ssim': '0.99999', 'ssim_a': '0.92126', 'fmi_edge': '0.93813', 'fmi_dct': '0.50923', 'fmi_w': '0.53852', 'nabf': '0.05364', 'scd': '0.08517', 'sd': '77.96719', 'sf': '0.00000', 'cc': '0.95716'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666', 'qsf': '-0.25349', 'qp': '0.79248', 'qs': '0.99977', 'qc': '0.81215', 'qy': '0.96282', 'qcv': '50.12677', 'viff': '0.74914', 'mef_ssim': '0.99998', 'ssim_a': '0.92148', 'fmi_edge': '0.88380', 'fmi_dct': '0.51491', 'fmi_w': '0.55421', 'nabf': '0.06566', 'scd': '0.49122', 'sd': '104.33935', 'sf': '0.00000', 'cc': '0.97299'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701', 'qsf': '-0.41214', 'qp': '0.67670', 'qs': '0.99961', 'qc': '0.80240', 'qy': '0.96698', 'qcv': '889.97750', 'viff': '0.58902', 'mef_ssim': '0.99997', 'ssim_a': '0.87866', 'fmi_edge': '0.88663', 'fmi_dct': '0.50458', 'fmi_w': '0.54057', 'nabf': '0.09811', 'scd': '0.39841', 'sd': '100.79161', 'sf': '0.00000', 'cc': '0.95410'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215', 'qsf': '-0.46324', 'qp': '0.77785', 'qs': '0.99973', 'qc': '0.84002', 'qy': '0.96272', 'qcv': '235.93068', 'viff': '0.66578', 'mef_ssim': '0.99997', 'ssim_a': '0.92036', 'fmi_edge': '0.91719', 'fmi_dct': '0.51916', 'fmi_w': '0.54778', 'nabf': '0.09229', 'scd': '0.26648', 'sd': '122.60037', 'sf': '0.00000', 'cc': '0.97811'}}, 'submitId': '2202231634160671'}
2022-02-23 16:53:58,509 - ./server.py[line:98] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
2022-02-23 16:59:51,638 - ./server.py[line:60] - INFO: start evaluation submitId 2202231659513361
Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          Processing orientation 1Processing orientation 2Processing orientation 3Processing orientation 4Processing orientation 5Processing orientation 6                                          2022-02-23 17:08:52,467 - ./server.py[line:88] - INFO: start call back submitId 2202231659513361
2022-02-23 17:08:53,119 - ./server.py[line:97] - INFO: {'evaluateMap': {'lytro-001': {'qmi': '0.80803', 'qte': '0.36917', 'qncie': '0.82081', 'qg': '0.48807', 'qsf': '-0.09119', 'qp': '0.63465', 'qs': '0.99985', 'qc': '0.76337', 'qy': '0.97190', 'qcv': '33.66428', 'viff': '0.87328', 'mef_ssim': '0.99999', 'ssim_a': '0.92126', 'fmi_edge': '0.93813', 'fmi_dct': '0.50923', 'fmi_w': '0.53852', 'nabf': '0.05364', 'scd': '0.08517', 'sd': '77.96719', 'sf': '0.00000', 'cc': '0.95716'}, 'lytro-002': {'qmi': '0.80959', 'qte': '0.37158', 'qncie': '0.82468', 'qg': '0.56666', 'qsf': '-0.25349', 'qp': '0.79248', 'qs': '0.99977', 'qc': '0.81215', 'qy': '0.96282', 'qcv': '50.12677', 'viff': '0.74914', 'mef_ssim': '0.99998', 'ssim_a': '0.92148', 'fmi_edge': '0.88380', 'fmi_dct': '0.51491', 'fmi_w': '0.55421', 'nabf': '0.06566', 'scd': '0.49122', 'sd': '104.33935', 'sf': '0.00000', 'cc': '0.97299'}, 'lytro-003': {'qmi': '0.71427', 'qte': '0.34586', 'qncie': '0.82025', 'qg': '0.57701', 'qsf': '-0.41214', 'qp': '0.67670', 'qs': '0.99961', 'qc': '0.80240', 'qy': '0.96698', 'qcv': '889.97750', 'viff': '0.58902', 'mef_ssim': '0.99997', 'ssim_a': '0.87866', 'fmi_edge': '0.88663', 'fmi_dct': '0.50458', 'fmi_w': '0.54057', 'nabf': '0.09811', 'scd': '0.39841', 'sd': '100.79161', 'sf': '0.00000', 'cc': '0.95410'}, 'lytro-004': {'qmi': '0.86729', 'qte': '0.38898', 'qncie': '0.82874', 'qg': '0.62215', 'qsf': '-0.46324', 'qp': '0.77785', 'qs': '0.99973', 'qc': '0.84002', 'qy': '0.96272', 'qcv': '235.93068', 'viff': '0.66578', 'mef_ssim': '0.99997', 'ssim_a': '0.92036', 'fmi_edge': '0.91719', 'fmi_dct': '0.51916', 'fmi_w': '0.54778', 'nabf': '0.09229', 'scd': '0.26648', 'sd': '122.60037', 'sf': '0.00000', 'cc': '0.97811'}}, 'submitId': '2202231659513361'}
2022-02-23 17:08:53,119 - ./server.py[line:98] - INFO: {"code":0,"info":"\u6210\u529f","data":null,"callback":"","unique":null}
 * Serving Flask app 'server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
